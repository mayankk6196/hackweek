{
  "projects": [
    {
      "title": "Nanoc based gallery",
      "categories": [
        "nanoc"
      ],
      "tags": [
        "somecode"
      ],
      "description": "Nanoc based gallery\n\nNanoc is a static website compiler. The project will add a gallery handler to it that will also render out exif data.\n\nSome initial code is there.",
      "originator": "darix",
      "members": [
        "darix"
      ]
    },
    {
      "title": "Pass memory regions to kdump via e820 and best also as EFI memory map instead of memmap= boot parameters",
      "categories": [
        "Debugging",
        "Kernel"
      ],
      "tags": [
        "In",
        "Progress"
      ],
      "description": "Pass memory regions to kdump via e820 and best also as EFI memory map instead of memmap= boot parameters\n\nmmconf (extended PCIe address space) is currently broken, because not all reserved\nregions are passed to the kdump kernel.\n\nPassing all regions via memmap= boot parameter is a bad idea, the kernel command line\nis limited in size.\n\nBetter pass a modified e820 table (usable memory is the one where the crash kernel lives in, etc)\nor even better create a EFI memory map dynamically and pass a pointer (and size) to it via boot\nloader structures (zero page).\n\nWork in progress... I have most of the code (efi map still missing), the hard part is testing, especially kdump on Xen needs testing sooner or later...\n\n\## Related material\n\nThis has been discussed already on lkml, but still needs implementation:\n\nhttp://comments.gmane.org/gmane.linux.kernel.kexec/7582\n\nhttp://permalink.gmane.org/gmane.linux.kernel.kexec/7726\n\n## Comments\n\nQuite some cleanup (avoid duplicate code, etc) is/was necessary.\n",
      "originator": "Thomas Renninger",
      "members": [
        "Thomas Renninger"
      ]
    },
    {
      "title": "Add virt man config for PCI pass through & SRIOV to YES Cert SCK7.2 for SP3  PXE install of pv guests",
      "categories": [
        "virtualization"
      ],
      "tags": [
        "virtmanager"
      ],
      "description": "\nThis is a great project to change the manual configuration of network adapter pass-through to use virt manager instead. With SP3 the virt manager functionality is suppose to be better,a. The Xen PV guest install documented in the kit does not use our PXE install server, this should also work in SP3. Needs to be fixed.\n\n## Status\n\nI plan to work on this project.\n\nWill possibly need help from Virtualization team here in Provo\n\n\n## Related material\n\n* https://www.suse.com/partners/ihv/yes/system-test-tools-for-suse-linux.html\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\n\n*by Drew* No comments at this time.",
      "originator": "Drew",
      "members": [

      ]
    },
    {
      "title": "NetworkManager OR Code WLAN Setup",
      "categories": [
        "distribution"
      ],
      "tags": [
        "idea",
        "helpwanted",
        "QR",
        "Code",
        "NetworkManager"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nAndroid devices are capable to read QR Codes to setup a Wifi connection. This feature makes it easy to connect to a protected network without the need to enter a password manually.\n\nThis project tries to add this kind of functionality to the NetworkManager. A QR Code can be held in front of a webcam to create a new WLAN entry.\n\nPersonal objectives:\n* Learn NetworkManager in detail\n* Learn about the D-Bus communication system\n* Code/Script a prototype\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n* Playing around with zbar and QR Codes.\n* Using scripts to create new WLAN network connections.\n* Help and comments are always welcome!\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [Wifi QR Code structure](http://code.google.com/p/zxing/wiki/BarcodeContents)\n* [ZBar Barcode Scanner](http://zbar.sourceforge.net/)\n* [NetworkManager Code Examples](http://cgit.freedesktop.org/NetworkManager/NetworkManager/tree/examples)\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Alexander Bergmann",
      "members": [
        "Alexander Bergmann"
      ]
    },
    {
      "title": "Github Pages Jekyll Templates",
      "categories": [
        "web"
      ],
      "tags": [
        "idea",
        "helpwanted"
      ],
      "description": "\nCreate a default set of templates and modules (perhaps with plugins) for github pages. This way projects can have nice shiny github pages without all of the effort\n\nThis is a great project to achieve world domination in just a few steps:\n\n* Code\n* Push to github\n* Get attention and fame by showing off your work with a github page for your project\n\n\n## Status\n\nI have just pushed the basic directory layout and a few test files to see if jekyll is working (it is)\n\n\n\n## Related material\n\n* http://kwwii.github.io/Project-Pages-Template/\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Ken Wimer",
      "members": [
        "Ken Wimer"
      ]
    },
    {
      "title": "make git check ignore streamable",
      "categories": [
        "tools"
      ],
      "tags": [
        "versioncontrol"
      ],
      "description": "\nLast hackweek I worked on adding a new `check-ignore` subcommand to `git`, and this is now in the latest release (1.8.2).  Since then I told the author of `git-annex` about it, and he said he could use it to make the `git-annex` assistant web UI support `.gitignore` files, but only if it supports being invoked in a \"streamable\" way.  Currently there are two issues blocking that:\n\n* http://thread.gmane.org/gmane.comp.version-control.git/220482\n\nSo I am intending to produce patches to fix both issues.\n\n## Status\n\nBasic patch for one of the two issues is already done.  Still need to fix the other one and write tests.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n## Related material\n\n* [Adam's fork of git](http://github.com/aspiers/git)\n\n## Comments\n\nGot a couple of good responses to my initial RFC email.",
      "originator": "Adam Spiers",
      "members": [
        "Adam Spiers"
      ]
    },
    {
      "title": "Gtg on Android",
      "categories": [
        "distribution"
      ],
      "tags": [
        "idea",
        "helpwanted"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nA complete product or service should be available on different platforms. Providing the Linux desktop solution which is not prefered by most end users nowaday seems not a good idea. The aims of this project are:\n\n* Our services which have Linux desktop client could also have Android client.\n\nTo approach this,\n* 1) Learn Android develop\n* 2) Using 'Get Things Gnome' to make the learning process meanful\n* 3) More ambitious works...\n\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\nDownload the SDK and books....\n    --- Done, both Windows and Linux environments were setup well.\n        My first Hello world project was running.\nReading book now.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [Source Code](http://github.com/openSUSE/world-domination)\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "David Liang",
      "members": [
        "David Liang"
      ]
    },
    {
      "title": "Package Tilemill for openSUSE",
      "categories": [
        "packaging"
      ],
      "tags": [
        "maps",
        "openstreetmap"
      ],
      "description": "\nTilemill is a great GUI tool for creating printable map views from OpenStreetMap data.\nCurrently only Ubuntu packages are provided. Let openSUSE not be missing that great application.\n\n## Status\n\nTo be packaged from scratch.\n\n\n## Related material\n\n* [Source Code](http://mapbox.com/tilemill/docs/linux-install/)\n\n## Comments\n",
      "originator": "Christopher Hofmann",
      "members": [
        "Christopher Hofmann"
      ]
    },
    {
      "title": "Create and convert a set of interesting photoshop curves presets into digiKam",
      "categories": [
        "image",
        "processing",
        "presets"
      ],
      "tags": [
        "curves",
        "preset",
        "Adobe",
        "Photoshop",
        "Gimp",
        "digiKam"
      ],
      "description": "\nCreate and convert a set of interesting curves presets from Adobe Photoshop into digiKam.\nAccording to the information of http://userbase.kde.org/Digikam/Photoshop_Preset_Curves, I want to create some useful curves presets and convert them by using python script acv2gimp.py so that digiKam can simply use them.\n\nThe main effort is to create some interesting presets.\n\n* create black-white effect\n* create some tones effect like flickr Aviary effects: avenue, haas, zona etc.\n* convert photoshop presets into gimp format crv\n\n\n## Status\n\nacv2gimp.py works fine. Now working on creating presets...\n\nI planned to work on this project last week.\nacv2gimp.py works fine. Now working on creating presets.\nNo code is needed, but the skill to create good preset is required. Looking for designer or photographer to provide their own curves presets :)\n\n\n\n\n\n## Related material\n\n\n## Comments\n\n\nI'll provide my own presets to everyone who wants to use digiKam.\n",
      "originator": "Zaoliang Luo",
      "members": [
        "Zaoliang Luo"
      ]
    },
    {
      "title": "Control Motoduino by bluetooth on openSUSE",
      "description": "\nMake a small toy by Motoduino and control though bluetooth module.\nBase on openSUSE 12.3 to write a small control tool.\nMotoduino provide one android app (and source codes )\n\nThis is a great project to achieve world domination in just a few steps:\n\n1. Research bluetooth module control on arduino , and learn Android develop.\n2. write a app on openSUSE.\n3. make a funny toy and control it on openSUSE.\n4. More ambitious works...\n\n## Status\n\nI plan to work on this project.\n\n## Comments",
      "originator": "Al Cho",
      "members": [

      ]
    },
    {
      "title": "crashgui",
      "categories": [
        "debugging"
      ],
      "description": "\nA GUI front-end for the crash kernel debugger that makes use of crash as a\nback-end in a manner that could permit the GUI to be run on a host of one\narchitecture and the instance of crash on a host of a different architecture\ncreating the effect of a cross-platform crash.\n\nA main goal is to provide better views of certain elements and common GUI\nsimplifications to enhance the experience of using crash.\n\n\n## Status\n\nSome initial work is there and we plan to work on this further.\n\n\n\n## Related material\n\n\n\n## Comments\n\n\n",
      "originator": "David Mair",
      "members": [
        "David Mair",
        "Petr Tesarik"
      ]
    },
    {
      "title": "Hack Week archaeology",
      "categories": [
        "hackweek"
      ],
      "tags": [
        "web",
        "ruby"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nThere were a lot of great projects at previous hack weeks, but most of it is not online anymore. This project is about collecting the material we have offline or from other sources and put it on the Hack Week web site as reference and inspiration.\n\nSpecifically I'd like to collect the following data:\n* General information and announcements about hack weeks\n* Award winners\n* Projects and project ideas from FATE and the (now off-line) idea pool.\n\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nAn initial import of projects is done. It needs some more refinement.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [Current state of past projects](http://hackweek.suse.com/archive/projects)\n* [Tools](https://github.com/SUSE/hackweek/tree/master/tools)\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Cornelius Schumacher",
      "members": [

      ]
    },
    {
      "title": "Intel SMBus Performance Optimizations",
      "categories": [
        "hardware",
        "kernel"
      ],
      "tags": [
        "idea"
      ],
      "description": "\nI want to make the Intel SMBus driver (i2c-i801) faster. A great step was achieved recently by adding interrupt support, but now the code itself could certainly be optimized a bit. This wasn't an issue before because polling was so slow that it made no sense to spend time on code optimization, but now I think it does.\n\nI have a few ideas already:\n* Avoid redundant register reads and writes.\n* Use non-paused I/O.\n* Check if code can be refactored.\n\nAnd first I will have to temporarily instrument the driver to measure the performance with sufficient accuracy.\n\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nI wrote a few patches long ago but the driver code evolved so much meanwhile that everything must be reevaluated and rebased.\n\nThe driver needs to be instrumented to measure accurately how much time each transaction takes. My original attempt to measure from user-space was a failure as it added too much overhead and wasn't accurate enough, so the performance gain, if any, couldn't be measured.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n* [Source Code](http://github.com/openSUSE/world-domination)\n-->\n\nNone yet.\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\n",
      "originator": "Jean Delvare",
      "members": [

      ]
    },
    {
      "title": "AABill rewrite",
      "description": "AAbill is a local web-tool for workmates to balance their money.\n\nrewrite aabill to support more features such as \"lunch history\", \"average price of some place\"\n\n\n\n\n## Status\n\n## Comments\nIs it possible to add the function of inputting \"decimal\"?",
      "originator": "dmzhang",
      "members": [

      ]
    },
    {
      "title": "Collaborative budgeting",
      "description": "## On-line collaborative budgeting\n\nSuppose an organization wants to decide what projects to undertake given a budget. It could be useful to have a web application that said organization can use to survey its members. Each person could submit their preference as to how they would spend the budget, and the site would score each item based on the survey results and propose a budget. If item A cost $2,000 and is selected by three people and item B would cost $1,500 and is selected by five people, then item A would score $2,000 * 3 = 6,000, and item B would score $1,500 * 5 = 7500, so B would receive a higher score, and the site should propose a budget with the highest possible score, as computed by adding the scores of all of its items. For this to be useful, it should be possible for participants to add comments to proposed items / to use the site for on-line discussion.\n\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nI plan to work on this project. COllaborators welcome.\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [Source Code](http://github.com/mgorse/finechoice)\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Mike Gorse",
      "members": [

      ]
    },
    {
      "title": "Reduce time and I O needed to start OBS build job",
      "categories": [
        "buildservice"
      ],
      "tags": [
        "OBS",
        "ARM",
        "PowerPC",
        "qemu"
      ],
      "description": "\nWhile preparing buildroot, currently we're required to copy over common core dependencies which makes quite a bit of I/O to the host. Either by using plain rpm or preinstall images, more or less, I/O is still there. The second thing which costs us a time is a proccess of doing mkfs all the time.\n\nThis should help for I/O poor archs (ppc970, ARM?)\n\nThe project is going to solve this by:\n* use filesystem image for common dependencies\n* Don't copy data but RO mount image to the build job\n\n\n## Status\n\nI plan to work on this\n\n\n\n## Related material\n\n* https://github.com/openSUSE/open-build-service\n* https://github.com/openSUSE/obs-build\n* http://wiki.qemu.org/Documentation/CreateSnapshot\n\n\n## Comments\n\n* Dirk worked on using squashfs+overlayfs for the ARM workers. Did you two talk?\n",
      "originator": "Dinar Valeev",
      "members": [

      ]
    },
    {
      "title": "Link Fate and Testopia",
      "categories": [
        "Tools"
      ],
      "tags": [
        "Fate",
        "Testopia",
        "PHP",
        "helpwanted"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\nWe are collecting all Features in Fate but also need them as a test case in Testopia. Because of this we are copying the data from Fate to Testopia at a certain point of time. Problem: if something is changing in Fate later, we do have to recognize about this change and manually change it in Testopia.\n\nWith the Hackweek project \"Link Fate and Testopia\" a tool shoul be created to keep Fate and Testopia in sync.\n\nA first step to achieve this was created during Hackweek 8 already. So there is a base to start from.\n\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nSome initial code is there. Looking for collaborators.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [Fate](https://fate.suse.com/)\n* [Testopia](https://bugzilla.novell.com/tr_show_product.cgi)\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\n\nProject participants:\nHolger Sickenberg",
      "originator": "Holger Sickenberg",
      "members": [

      ]
    },
    {
      "title": "An Incomplete Guide To Suse",
      "categories": [
        "documentation"
      ],
      "tags": [
        "idea",
        "inprogress",
        "guide"
      ],
      "description": "A hackweek project vision.\n\n\n### Vision\nThis hackweek project is about making an overview of Suse projects, teams and processes for new as well as current employees who would like to have some more overview of what is being done in the company then just in their team and next door. The overview is meant to concentrate information that are not available or are on many places and difficult to find. I hope to get most of the interesting information technical as well as about processes to as small area as possible.\n\nThe target audience is\n\n* HR/training,\n* hackers,\n* salesman,\n* managers\n* and, well, just whoever can make some use of this.\n\n#### Main requirements\n\n* **Compact**\n* **Complete**\n* **Connected**\n* **Centralized**\n\n### Scope\nOne of the important factors is to keep the guide simple and usable for new employees so people will not get scared as soon as they see it for the first time.\n\nScope has been qualified as follows: the content will have references or descriptions to products, teams, tools and acronyms.\n\n### Format\nCreated documentation will be available on the Novell wiki. There is also possibility that a presentation will be created that will serve the most important stuff from the wiki. That is now considered a bonus of the project.\n\nI have settled with the table format because that is immediately easy to understand and follow. And even with a lot of data it does not look scary.\n\n## Status\n\nThe project is proposed and agreed on with manager and HR department.\n\n\n\n\n## Related material\nYou can find the guide at the link below. So far there is only a skeleton and I am working on the data gathering and also redefining the structure. There is not much useful information, yet.\n\nhttps://wiki.innerweb.novell.com/index.php/Incomplete_Guide_to_Suse\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Pavel Kačer",
      "members": [

      ]
    },
    {
      "title": "hack the build of OpenStack",
      "categories": [
        "cloud"
      ],
      "tags": [
        "idea",
        "openstack"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nI need to learn more about OpenStack.  I'll dig into how it's built, and if I can I'll hack some changes to the build.\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nI plan to work on this project.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\nOpenStack would do well to implement <a href=\"http://tacocopter.com/\">The Tacocopter</a>\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\n\n*Fri Apr  5 17:47:50 CEST 2013 jamestyj*: See http://en.opensuse.org/Portal:OpenStack for details on existing work in this area.",
      "originator": "Craig Gardner",
      "members": [

      ]
    },
    {
      "title": "Measure Operating System in EFI OS Loader by means of EFI TCG Protocol",
      "categories": [
        "distribution"
      ],
      "tags": [
        "idea",
        "helpwanted"
      ],
      "description": "\nFrom TCG EFI Platform Specification, Operating System is defined to be measured into PCR [8] by the OS Loader which itself was measured into PCR [4] by CRTM. \n\nAs each OS Loader can use different code load and measurement methodology, it's outside the scope of the specification as it's not part of LoadImage () actions which platform firmware is the measuring agent.\n\nMy hackweek is to implement this measurement on a selected bootloaer (grub2) by means of the TCG EFI Protocol to extend each of the target's hash result into PCR [8].\n\nThe measuring targets are:\n\n1. kernel\n2. initrd\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nIdea looking for takers.\n\nI plan to work on this project.\n\nNo base source code but EDK2 SecurityPkg has provided some reference.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n## Related material\n\n* TCG EFI Platform Specification\n* TCG EFI Protocol\n* TCG PC Client Specific TPM Interface Specification\n* TCG PC Client Specific Implementation Specification For Conventional BIOS\n\n## Comments\n\n",
      "originator": "Michael Chang",
      "members": [

      ]
    },
    {
      "title": "Getting SMB Traffic Analyzer further to release",
      "categories": [
        "networking"
      ],
      "tags": [
        "samba"
      ],
      "description": "\nThis hackweek project is about getting a new version of SMB Traffic Analyzer closer to release, so that we can make an appearance with something new to show up at this years Samba XP conference.\n\nIn particular we want to:\n* Finish the interpolation algorithm of the real time graphs SMBTA is producing\n* create a database connection to SMBTAmonitor-qt, so that the program can look up existing network data such as seen shares and users.\n\n\n## Status\n\nWe will try to implement the features noted above during hackweek.\n\n\n\n## Related links\n\nhttp://holger123.wordpress.com/smb-traffic-analyzer/\nhttp://www.samba.org\n",
      "originator": "Nanuk Krinner",
      "members": [
        "Nanuk Krinner",
        "Holger Hetterich"
      ]
    },
    {
      "title": "Changelog Analytics",
      "categories": [
        "analytics"
      ],
      "tags": [
        "idea",
        "helpwanted",
        "machinelearning",
        "python"
      ],
      "description": "\nThe open source projects have change the way we see software development for ever. Now we have huge projects with more than 10 years of developments and evolution. If we want to understand the how real, big and successful projects works, we have the chance to analyze the source code, the mailing list and all the process that is related with those projects.\n\nBut, how to manage this huge amount of information to understand the inner behavior of a open source project? For this kind of things we need to develop processes and analytics tools that can help us in the analysis works.\n\nWith this project I want to start with a KISS approach, working on the part that we consider more important about a project: the source code and the SCM change log information. We will develop a tool that:\n\n* Read the changelog and some statistics from a git repository\n* Train a machine learning classifier aid with some NLP techniques to differentiate:\n * Commits that are features\n * Commits that fix a new bug\n * Commits that fix a regression\n* Use this tool to analyze a big OS project: https://www.kernel.org/\n\n\n## Status\n\nI plan to work on this project, but I will need some help for the presentation and visualization layer.\n\n\n\n\n## Related material\n\n* [scikit-learn](http://scikit-learn.org/stable/)\n* [NLTK](http://nltk.org/)\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "aplanas",
      "members": [

      ]
    },
    {
      "title": "kiwi_spec",
      "categories": [
        "QA"
      ],
      "tags": [
        "qa",
        "test_automation",
        "kiwi",
        "appliances",
        "cloud",
        "helpwanted",
        "inprogress"
      ],
      "description": "\nkiwi_spec is [RSpec](http://rspec.info/) based suite which aims to test the hell out of [KIWI](http://opensuse.github.io/kiwi/) in a fully automated way.\n\n## Status\n\nWe already have some working code which we are using internally in QA Maintenance team for testing quality of KIWI maintenance updates for SLE.\n\nCurrently test suite is capable to:\n\n* Build 'oem', 'vmx', 'xen', 'pxe' image types\n* Deploy the images to KVM server and run the tests within appliance\n* Cover LVM configuration\n\nThe current plan on this hackweek is:\n\n* Generalize the code\n* Make the project open source\n* Increase number of supported image types\n* Add new deployment tests\n\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n* [Source Code](http://github.com/openSUSE/kiwi_spec)\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Yury Tsarev",
      "members": [
        "Yury Tsarev",
        "Dinar Valeev",
        "Roman Neuhauser",
        "Marcus Schäfer",
        "Theo Chatzimichos"
      ]
    },
    {
      "title": "The road to AppStream: software.opensuse.org goes social",
      "categories": [
        "distribution",
        "web"
      ],
      "tags": [
        "helpwanted",
        "ruby",
        "appstream"
      ],
      "description": "\nThere are two recurrent ideas regarding openSUSE: we need to provide a better way for users to discover new applications (software.o-o is absolutely perfect IF you already know what are you searching for) and connect.o-o needs more activity. So the plan is allow Connect users to rate and review packages in software.o-o, so search results can be ordered by rating, number of comments, etc. We should also have 'latest commented/rated' widgets for Connect, to encourage participation.\n\nThe page should act also as an [Open Collaboration Services](http://www.freedesktop.org/wiki/Specifications/open-collaboration-services-1.5) provider, allowing other applications to access to comments and ratings. OCS is the protocol suggested by the [AppStream initiative](http://www.freedesktop.org/wiki/Distributions/AppStream/), so this project will add another piece to the AppStream puzzle, closing a little bit the gap between what we really have now and the final AppStream goal.\n\n## Status\n\nCurrently, software.o-o is a Ruby on Rails application which performs packages searches using the OBS API, sorts this result using its own relevance criteria, enriches the information using data from the appdata.xml file from openSUSE repository and, finally, shows the results.\n\nTo add comments and ratings to the mix, some things need to be done:\n\n* Add tests to ensure that the current functionality is not broken during the process.\n* Add authentication support to software.o-o through the authentication proxy (the same used by connect.o-o).\n* Add comments and ratings to the application.\n* Add options to sort by relevance, ratings or comments (explore the possibility of using [Xapian](http://xapian.org)).\n* Implement the OCS interface.\n* Implement widgets for connect.o-o ([Elgg](http://elgg.org) plugin).\n* A lot of UI design work (help needed!)\n* ...\n\nAncor Gonzalez Sosa plans to work on this project.\n\nA lot of things to do for a week (and no previous experience with OCS, Xapian, Elgg...) so there is room for a lot of contributors.\n\n\n## Related material\n\n* [Source Code](http://github.com/openSUSE/software-o-o)\n\n## Comments\n",
      "originator": "Ancor González Sosa",
      "members": [

      ]
    },
    {
      "title": "Packaging qtile, a pure Python tiling window manager",
      "categories": [
        "distribution"
      ],
      "tags": [
        "idea",
        "inprogress"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nPackaging qtile(http://qtile.org/), a pure-Python tiling window manager. It's one of modern tiling window manager that written in Python, a good chance compare to famous tiling wm like awesome or i3.\n\nThe dependencies of qtile could found here http://docs.qtile.org/en/latest/manual/install/source.html\n\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nI plan to work on this project.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [Upstream Source Code] https://github.com/qtile/qtile\n* [OBS project] https://build.opensuse.org/project/show?project=home%3Amlin7442%3Aqtile\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Max Lin",
      "members": [

      ]
    },
    {
      "title": "colt (A simple blog engine for Scheme language)",
      "categories": [
        "web"
      ],
      "tags": [
        "blog",
        "scheme",
        "web"
      ],
      "description": "## A simple blog engine with Scheme language\n\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nThis project based on lightweight web-framework of Scheme language [Artanis](https://github.com/NalaGinrut/artanis) \nThere contains three main parts:\n\n* MVC (Model-View-Control)\n* Sinatra style route\n* Template\n\n\n## Status\n\nEverything's OK, waiting for start.\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [GNU Guile](http://www.gnu.org/software/guile)\n* [Artanis](https://github.com/NalaGinrut/artanis)\n* [Guile-dbi](http://home.gna.org/guile-dbi)\n\n## Comments\n\nI planed to write blog engine for myself to build my BLOG totally in my prefer way. \nActually, I tried Django & RoR, but they are full-stack and heavy. \n\nBesides, Scheme is my favorite language, and the best languages in the universe.\n\nHappy hacking!",
      "originator": "Mu Lei",
      "members": [

      ]
    },
    {
      "title": "Rewrite SWAMP",
      "categories": [
        "web"
      ],
      "tags": [
        "inprogress",
        "community",
        "workflows",
        "java"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nSWAMP in its current state is still working fine for me, but honestly, its age is showing, and the frameworks it is based on are dead projects. In this hackweek I would like to salvage from the current code base what has stood the test of time (at least the workflow definition language, workflow parsing, and the state machine itself, possibly more) and prepare to rewrite the rest. This is a long-term project, but I would like to use hackweek as a motivational tool to get started ;-)\n\nLong-term goals:\n\n* get rid of Torque and Turbine dependencies (maybe use Hibernate for ORM)\n* remove dependency on java application server, make a standalone OSGi-based app instead\n* de-couple backend and web frontend, have the java part only provide a simple API servlet (RESTful, whatever)\n* introduce (executable) BPMN as second workflow type\n* graphical workflow editor\n* better Web UI\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nI plan to work on this project. I have Monday to Wednesday all day, but only limited time the rest of the week. We'll see.\n\n<!---\n*Add also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.*\n*Popular categories: distribution,web,hardware*\n*Popular tags: idea,inprogress,done,helpwanted*\n\n\n\n-->\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [git repository](http://repo.or.cz/w/workflows.git)\n* [SWAMP v1](https://swamp.sf.net) \n\n\n## Comments\n\n* There is already official project for replacing SWAMP in progress... [nijel](https://github.com/nijel)\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "skh",
      "members": [

      ]
    },
    {
      "title": "Per subvolume mount options for btrfs",
      "categories": [
        "filesystem",
        "kernel"
      ],
      "tags": [
        "btrfs",
        "inprogress"
      ],
      "description": "\nBtrfs subvolumes act like a separate file space but share the data with the rest of the containing filesystem. User may choose to create several subvolumes with different usage characteristics. Up to now, it's not possible to mount a subvolume with different options, like compression. There was a popular demand for this feature for a long time.\n\nGoal of this project is to implement this functionality.\n\nTentative list of mount options that may be set locally: compress, autodefrag, inode_cache, nodatasum, nodatacow, max_inline\n\n## Status\n\nThere's a prototype implementation that does not apply on top of recent btrfs code, and the patch is not clean enough to be sent upstream.\n\n\n## Related material\n\nWill be published in https://github.com/kdave/btrfs-devel\n\n## Comments\n",
      "originator": "David Sterba",
      "members": [
        "David Sterba"
      ]
    },
    {
      "title": "QuantumSupport for VXLAN on LinuxBridge Plugin",
      "categories": [
        "networking"
      ],
      "description": "\nStarting from kernel 3.7 we have native support for VXLAN protocol. This feature ideally fits into the cloud environments with multiple vlans/tenant networks. \n\nAt this moment Openvswitch quantum plugin offers similar functionality (L2 GRE tunnels). To take advantage of this ovs-vswitchd is required to run in userspace. This process is responsible for setting up data-path (first packet for each connection is processed in user space). That kind of solution have performance limitations and  many old-style networking people are afraid of user space processes  being responsible for whole dataswitching environment.\n\n### Vxlan linux kernel support\n\nhttp://kernel.opensuse.org/cgit/kernel/tree/Documentation/networking/vxlan.txt?h=openSUSE-12.3\n\n### Development enviroment\n\nAll testing and development will happen on virtual machines based on openSUSE 12.3. newly created machine is placed into the openSUSE 12.3 installation process using PXE and pxelinux and autoyast configuration file.\n\n\n--pxelinux.cfg--\n\nlabel linux-123\n  kernel openSUSE_12.3/linux\n  append initrd=openSUSE_12.3/initrd splash=silent showopts install=http://download.opensuse.org/distribution/12.3/repo/oss autoyast=tftp://172.31.0.55/autoyast-12.3.xml\n\n--\n\n## Status\n\nInitial working version ready:\n\nhttps://github.com/tpaszkowski/quantum/commit/600b2b5a74bdacc00af1df057ad9e9c1a8327d47\n\n\nUpstream review process:\n\nhttps://review.openstack.org/#/c/26516/\n\n",
      "originator": "tpaszkowski",
      "members": [

      ]
    },
    {
      "title": "fontinfo",
      "categories": [
        "desktop",
        "i18n"
      ],
      "tags": [
        "font",
        "fontinfo"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nImprove fontinfo (home:pgajdos/fontinfo):\n\n* One click install for packages.\n* Subpixel rendering.\n\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nI think one click install will take one or two days,\nthe rest I will dedicate to experimenting with subpixel \nrendering. Font card is missing information if the \nfont will be rendered with subpixel rendering if available.\n\n<!---\n*Add also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.*\n*Popular categories: distribution,web,hardware*\n*Popular tags: idea,inprogress,done,helpwanted*\n-->\n\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\n",
      "originator": "pgajdos",
      "members": [

      ]
    },
    {
      "title": "Pebble hacking",
      "categories": [
        "mobile"
      ],
      "tags": [
        "watch",
        "mobile"
      ],
      "description": "\nThis project is about examining what is possible to do with Pebble watch in terms of opensource software. Here are ideas which I'd like to explore and see if they are easily implementable:\n\n* Pebble app for Nokia N900 (Maemo)\n* App for displaying more timezones on Pebble\n\n\n## Status\n\n\n\n\n## Related material\n\nHere are resources which can be used:\n\n * http://developer.getpebble.com/\n * http://forums.getpebble.com/\n * https://github.com/Hexxeh/libpebble\n * http://pebbledev.org/wiki/Main_Page\n * https://github.com/DouweM/pebblewatch\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Jan Krupa",
      "members": [

      ]
    },
    {
      "title": "Continue working on 'lock free' libzypp",
      "categories": [
        "distribution"
      ],
      "tags": [
        "inprogress"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nContinue working on 'lock-free' libzypp\n\n* finish libzypp code\n* adapt zypper and PK to changed flow\n\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nStarted this on the last appliances workshop and wnat to get this done ASAP :)\n\nI plan to work on this project.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [Libzypp Code](http://github.com/openSUSE/libzypp)\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Michael Andres",
      "members": [

      ]
    },
    {
      "title": "Admin Dashboard",
      "categories": [
        "web",
        "studio"
      ],
      "tags": [
        "inprogress",
        "helpwanted",
        "rails",
        "studio",
        "chef"
      ],
      "description": "The goal of this project is to create an admin dashboard for managing nodes in a cluster. It's currently focused on the specific use case of managing the [SUSE Studio](http://susestudio.com/) cluster, but we hope that it will be generic enough to be useful for others as well. The dashboard will pull key information/metrics from other systems and also allow us to store/track metadata, such as comments, warranty information, etc.\n\nWe want to the user interface to be responsive, intuitive, and easy to use - like these [admin templates](https://wrapbootstrap.com/themes/admin).\n\n### Background\nOperating a cluster of servers in a data center today often requires a myriad array of software tools, each specialized for solving a specific purpose. For example, Nagios/Icinga for monitoring, Munin/Ganglia for system metrics, NewRelic for application runtime performance metrics, Graphite for business metrics, Puppet/Chef for configuration management, LogStash/GrayLog2 for logging, etc. \n\nWhile it's great to have such a wide variety of open source tools to pick and choose from, there's a lack of good open source dashboards that pulls in key information _and_ allows us to perform actions/comments with the nodes/data. (If you know of any, do drop us a note in the comments section below.) \n\nWe're also missing a nice way to track and visualize miscellaneous types of information like hardware failures, physical location (datacenter/cluster/rack/unit), comments, and warranty information. This is all managed with a Google Spreadsheet at the moment, which is not that nice.\n\n### Plan for Phase 1\nThe first phase of the project will be completed within the Hackweek (5 days). We will focus on replacing the Google spreadsheet for tracking node information, and implement a web dashboard that displays a table with similar information. The Studio cluster is managed by Chef, so we'll pull and persist relevant data there. This brings the following advantages:\n\n* Node/host information will be pulled directly from Chef, so there's no longer a need to manually enter and update entries, which is slow, error-prone, and easily outdated.\n* Clear history on the comments - we will store who changed what and when.\n\nWe don't plan to replace the Chef web UI, so we won't duplicate functionality there. \n\nTo keep things simple, we will store all comments in Chef. Alternative backends may be provided in future if this does not scale, or if some other configuration management framework is preferred.\n\n### Technology / Frameworks\nDue to team experience and usage in other related projects (eg. Studio itself), our preferred stack is Rails, HAML, SASS, CoffeeScript, Rspec, Batman JS and PostgreSQL.\n\n## Status\n\nDaily summary of our activities, as documentation on why we made certain decisions, in case there's a need to revisit them in future:\n\n| Date | Comments |\n|------|----------|\n| Mon 8 Apr 13 | We've started brainstorming and gathering feedback on the proposed use cases and scope. Talked to Jan Krupa and Wolfgang Engel (Studio sysadmins) on the use cases and setup details (running it within the firewall vs externally, say on Heroku). Design sketches and possible implementations ideas made. Also got the internal Chef web UI running (link to internal documentation in the reference section below). |\n| Tue 9 Apr 13 | After some research, discussions, and alignment our various goals for this Hackweek project, we decided to use [Team Dashboard](https://github.com/fdietz/team_dashboard) as a starting point. We'll upstream relevant patches but our project has fundamentally different goals so we'll have to see how to move forward down the road. Ancor will focus on the frontend and James on the backend. We'll use [Ridley](https://github.com/RiotGames/ridley) to communicate with Chef. |\n| Wed&nbsp;10&nbsp;Apr&nbsp;13 | Coming soon. |\n| Thu 11 Apr 13 | Coming soon. |\n| Fri 12 Apr 13 | Coming soon. |\n\n\n## Related material\n\nProject specific:\n* [Source code](https://github.com/susestudio/dashboard)\n* [Project page](http://susestudio.github.io/dashboard) (Just a placeholder for now)\n\nReferences:\n* [Internal] [SUSE Studio's Chef web UI](https://github.com/SUSE/studio/blob/master/deploy/chef/README.md#chef-web-ui)\n* [DashIO](http://dashio.herokuapp.com/studio-status), from previous Hackweek. Source is not (yet?) public but we have access to it. Based on [Dashing](http://shopify.github.io/dashing/), uses SCSS, CoffeeScript, Batman JS, and Sinatra.\n* [Team Dashboard](https://github.com/fdietz/team_dashboard), which uses Rails, Angular JS, etc. Has support for Graphite, Ganglia, Jenkins, Travis CI, Errbit, New Relic, and Pingdom.\n* Other dashboards:\n  - https://github.com/kevingorski/TrackBoard\n  - https://github.com/ModelN/sDashboard\n* Related Javascript and Chef libraries/tools:\n  - https://github.com/erikh/chef-dashboard\n  - https://github.com/boskya/Chef.here\n  - https://github.com/inscitiv/node-chef-client\n  - https://github.com/sgentle/chef-node\n  - https://github.com/portertech/nagios-dashboard\n\n## Comments\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\nThere are no comments yet. Be the first to add one!",
      "originator": "James Tan",
      "members": [

      ]
    },
    {
      "title": "dracut, the revenge",
      "categories": [
        "distribution"
      ],
      "tags": [
        "inprogress",
        "helpwanted"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nFollowing last year dracut port to openSUSE, this year hackweek projects will focus on:\n* getting latest systemd release (200 or 201 if released) in Factory (with targets for use with dracut), resyncing patches, pushing some upstream if possible\n* sync dracut with this systemd release\n* ensure dracut testsuite is passing on openSUSE\n* review all mkinitrd hooks packages in the distribution and provides dracut alternative\n* have a mkinitrd wrapper for dracut, compatible with all options in current mkinitrd\n* enable mkinitrd obsolete in dracut\n* push to Factory\n* profit, world domination\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\nNeed to resync with latest dracut package to see its state and what needs to be done\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\nTo do test, I suggest to use a separate VM (dracut test suite can even take care of that, but it might need\nsome improvement to run nicely on openSUSE)\n\n* [Source Code](https://dracut.wiki.kernel.org/)\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Frédéric Crozat",
      "members": [

      ]
    },
    {
      "title": "Push Weblate further",
      "categories": [
        "web",
        "i18n"
      ],
      "tags": [
        "idea",
        "helpwanted",
        "python"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nMain task is to do 1.5 release, there is \n[list of open issues](https://github.com/nijel/weblate/issues?milestone=7&page=1&state=open) \nwhich should be fixed for that.\n\nAlso some people are considering to use Weblate for openSUSE translation, what might be another source for feature requests or code changes.\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nI plan to work on this project.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [Website](http://weblate.org/)\n* [Source Code](http://github.com/nijel/weblate)\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Michal Čihař",
      "members": [

      ]
    },
    {
      "title": "GitDo",
      "categories": [
        "web",
        "documentation"
      ],
      "tags": [
        "idea",
        "newbies",
        "tutorial",
        "help",
        "github",
        "design",
        "web"
      ],
      "description": "\nI'll create a tool help newbies to use GitHub, the objective of my project is help the new designers which will join us soon to get familiar with this tool.\n\nThis project will be divided in 2 parts:\n\n* Tutorial (probably GitHub Page). \n* Shell Script template.\n\n## Status\n\nI plan to work on this project.\n\n\n## Source Code\n\n* [GitCool](https://github.com/cassiolupifieri/GitCool)\n\n## Comment\n\n* Bamboo says \"[Try GitHub](http://try.github.io/levels/1/challenges/1)\" has a cool way of teaching people.\n",
      "originator": "Cassio Lupifieri",
      "members": [

      ]
    },
    {
      "title": "Percpu command for crash",
      "categories": [
        "distribution"
      ],
      "tags": [
        "idea",
        "c"
      ],
      "description": "## Percpu command for crash\n\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nThe crash utility (http://people.redhat.com/anderson/) already has some support for examining per-cpu variables, but it is limited to static data. If a dynamic pointer is a per-cpu variable, there's no easy way to examine its value on all CPUs.\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nI (Petr Tesarik) plan to work on this project.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Michal Hocko",
      "members": [

      ]
    },
    {
      "title": "Improve E17 integration to openSUSE 12.3 and Factory",
      "categories": [
        "distribution",
        "packaging"
      ],
      "tags": [
        "inprogress",
        "helpwanted",
        "e17"
      ],
      "description": "\nopenSUSE 12.3 was the first release that included e17. It still suffers from some children sicknesses and space for improvement.\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nThis is a great project to achieve world domination in just a few steps:\n\n* **fix openSUSE desktop profile**\n    * to make E17 usable and nice for beginners, we need to provide profile with default theme set, with default panel containing gadgets you would expect and without problematic gadgets like CPUfreq\n* **add E17 to installer's desktop selection**\n    * it should appear under \"Other\", next to XFCE and LXDE\n* ~~**automount**~~\n    * E17 has UDisks support, but oS 12.3 uses UDisks2, so fix dependencies or find other way\n        * UDisks added as Recommends in spec file\n* **first run wizard improvements**\n    * wizard asks about language and keyboard settings even though it is already set system wide\n    * wizard asks about keep an eye on updates - useless with package management\n* **verify correctness of DBUS/Polkit/ConsoleKit**\n    * to control NetworkManager, Bluetooth, etc. - someone with this knowledge needed\n* ~~**oS 12.3 as EFL development platform**~~\n    * EFL is the future of mobile application development since Tizen is based on that\n    * improve packages with documentation (to not collide with rest of SUSE world)\n        * man pages are generated even for parameters of functions and this leads to confusion, it seems there is no easy way to disable this behavior and it is too time consuming to filter these files manually\n        * disable man page building for other projects than X11:Enlightenment:Factory\n* **make entrance working**\n    * EFL based graphical login manager needs a lot of care, *Kit knowledge is probably needed here\n* **make new packages**\n    * web browser (webkit based)\n    * media center\n    * ...\n* **improve portal wiki**\n    * we need to improve wiki pages on portal\n\nYou can find more interesting tasks [TODO list in Portal](https://en.opensuse.org/Portal:Enlightenment/TODO).\n## Status\n\nI plan to work on this project but there is hell of work to do in all areas. Choose one or even add your own.\n\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [Development project](https://build.opensuse.org/project/show?project=X11%3AEnlightenment%3AFactory)\n* [Portal page](https://en.opensuse.org/Portal:Enlightenment)\n* [GIT snapshot project](https://build.opensuse.org/project/show?project=X11%3AEnlightenment%3ANightly)\n* [My personal E17 TODO list](http://sleep-walker.cz/e17-todo.html)\n\n## Comments\n*by Sleep_Walker - day 1*\n* Man page packages will be generated for X11:Enlightenment:Factory only to avoid collisions in openSUSE distributions. You can still use HTML docs which doesn't collide.\n* it seems that latest EFL release (1.7.6) doesn't contain some examples anymore - adjusted spec file accordingly\n* Fixed ev desktop file not to fail for SLE targets\n* E17 0.17.1 still contains e-module-ibox.edj bug which prevents me from creating working openSUSE profile for now - I hope it will get better with 0.17.2 which is to be built\n* UDisks added as Recommends into spec file, it is not colliding with UDisks2, no UDisks2 support planned for E17 (which depends on e_dbus v1)\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Tomas Cech",
      "members": [

      ]
    },
    {
      "title": "Mapping my home",
      "categories": [
        "distribution"
      ],
      "tags": [
        "idea",
        "helpwanted"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nOpenStreetMap is a useful project which provides an informative map. I want to learn more about it to improve the map around my home and check the map API to write a simple map application.\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nI plan to work on this project.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [OpenStreetMap Wiki](http://wiki.openstreetmap.org/wiki/Main_Page)\n* [libchamplain](http://projects.gnome.org/libchamplain/)\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Gary Lin",
      "members": [

      ]
    },
    {
      "title": "play with kvm features (especially nesting and non x86)",
      "categories": [
        "virtualization"
      ],
      "tags": [
        "idea",
        "kvm"
      ],
      "description": "* sp3 is bringing nested kvm on x86, play with starting VMs from a VM, see where we run into\nbottlenecks.\n* kvm on the non x86 archs is an interesting field, see what it will take to get kvm working\non existing hardware and software installations\n\n## Status\nhave a code snippet testing kvm abilities on x86 autobuild clients to use kvm as method for\nbs_worker, see how this can be completed and also extended for other platforms\n\n\n\n## Comments\n\n*by Tim Serong*: I experimented a bit with nested KVM on openSUSE 12.2 on Intel some time ago (attempting to run OpenStack in VMs on my desktop, with instances deployed therein).  FWIW the notes I have from that experiment are: Mostly seems to work, except sometimes an openstack compute node (\"outer KVM guest\", I guess you'd call it) locks up a CPU when running an instance (\"inner KVM guest\"), and gets stuck there. The next day you discover that node thinks it's the year 2190, and has some exciting large numbers in syslog, e.g.: \"Clocksource tsc unstable (delta = -848253070989 ns)\" and \"BUG: soft lockup - CPU#0 stuck for 15589s! [qemu-kvm:7190]\". No idea if this affects SP3, just recording it for posterity :-)\n\n*by Dinar Valeev*: We are running OBS workers using KVM on PowerPC in HV mode for quite a while. To be able to run HV mode you need JS21 (PPC970) with SLOF firmware or PowerLinux 7R2 machine (POWER7) running in OPAL mode. From a year of usage, I can say it is quite stable. Build and bs_worker are ready for that already.",
      "originator": "Ruediger Oertel",
      "members": [

      ]
    },
    {
      "title": "Cubieboard Linux system",
      "categories": [
        "Embedded",
        "system"
      ],
      "tags": [
        "cubieboard",
        "bootable",
        "linux"
      ],
      "description": "Build a kernel, u-boot and a rootfs and copy to a SD card \n\n## Status\n\nI refer to some wiki people created.\n\n# steps :\n  * http://linux-sunxi.org/Main_Page/zh_tw\n  * http://linux-sunxi.org/FirstSteps#The_flexible_option:_manual_build_and_installation\n  * http://linux-sunxi.org/Building_on_Debian\n  * http://linux-sunxi.org/Cubieboard/FirstSteps#Trying_more_bootable_images\n  * http://linux-sunxi.org/Cubieboard/Installing_on_NAND\n\n\n\n\n\n## Related material\n# resource tree :\n* git clone git://github.com/linux-sunxi/u-boot-sunxi.git\n* git clone git://github.com/linux-sunxi/linux-sunxi.git\n* git clone git://github.com/linux-sunxi/sunxi-tools.git\n* git clone git://github.com/linux-sunxi/sunxi-boards.git\n\n# compiler :\n* https://launchpad.net/linaro-toolchain-binaries/trunk/2013.03/+download/gcc-linaro-arm-linux-gnueabihf-4.7-2013.03-20130313_linux.tar.bz2\n\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Matt Chen",
      "members": [

      ]
    },
    {
      "title": "Release GFXprim library",
      "categories": [
        "graphics"
      ],
      "tags": [
        "inprogress",
        "library",
        "graphics",
        "helpwanted",
        "c"
      ],
      "description": "\nAfter more than four years of development [GFXprim](http://gfxprim.ucw.cz) is close to its first release. \n\nGfxprim is simple modular 2D bitmap graphics library with emphasis on speed and correctness.\n\nOne of the key points of the library is meta-programming. Most of the operations and filters are written in Jinja templating language that is used to generate specialized code in C programming language. Creating code that works with less usual pixel types should be as easy as adding pixel definition into the configuration and rebuilding the library.\n\nSome of the features are:\n\n* Supports loading and saving most of the image formats (PNG, JPG; loading only: GIF, BMP, PSP, ...)\n* Can draw lines/circles/polygons (anti aliased drawing is being worked on)\n* Has image filters (resampling, convolutions, point filters, ditherings, ...) some supports running in multiple threads\n* Drawing and input support for X11 (with support for multiple windows), SDL, Linux Framebuffer, kernel input layer\n* Text drawing with compiled-in fonts or TTF fonts using FreeType\n* (not finished) Python bindings\n* Has number of unit tests\n\nThere are still some [nits](https://github.com/gfxprim/gfxprim/wiki/Scratchpad) to be taken care of. Feel free to ask on our [mailing list](http://www.ucw.cz/mailman/listinfo/gfxprim).\n\n## Status\n\nWe are looking for:\n\n* testers (try it compile and run demos, report bugs if found)\n* documentation writers/reviewers (asciidoc documentation is part of the git repo)\n* developers :)\n* anything else you can think of\n* packagers\n\n\n## Related material\n\n* [Source Code](https://github.com/gfxprim/gfxprim)\n* [Documentation](http://gfxprim.ucw.cz/general.html)\n\n## Comments\n",
      "originator": "Cyril Hrubis",
      "members": [

      ]
    },
    {
      "title": "add wireshark plugin to support protocol of cmirrord",
      "categories": [
        "networking"
      ],
      "description": "\nwireshark is a great software which could analyze \nmany network protocols.\n\ncmirrored is used in cluster environment, using wireshark\nto parse cmirrord protocol is a good way to learn and debug\ncmirrored\n\n\n## Status\n\n\n",
      "originator": "dmzhang",
      "members": [

      ]
    },
    {
      "title": "Project CIABatta: Building a virtual datacenter in a box on a high end laptop",
      "categories": [
        "buildservice",
        "cloud",
        "documentation"
      ],
      "tags": [
        "inprogress",
        "helpwanted",
        "openstack",
        "python",
        "web",
        "virtualization"
      ],
      "description": "\nThe working title \"CIABatta\" is inspired by \"Cloud In A Box\". The ultimate goal is to build the infrastructure for creating demo environments or test setups of _all_ SUSE products, from SUSE Cloud and SUSE Manager to SLEPOS and the HA extension, so that anybody with a beefy laptop or dedicated server system can run them.\n\nApplications for this can range from demos and evaluation (the initial target) to development setups, QA, training purposes, and ultimately real-life deployments.\n\nThe design choice is to use OpenStack (\"SUSE Cloud\") as the \"runtime\".\n\nThis project can be interesting for contributors with very diverse skills, from OpenStack knowledge (especially the networking stack and APIs) to web and graphical design or even non-technical contributions of use case stories that we could narrate with this infrastructure.\n\n## Goals ##\n\nMy (Joe's) initial goals for this Hack Week are:\n\n* set up the project in GitHub, OBS\n* create a first implementation of the use-case-driven UI, using OpenStack's Horizon framework and Django/Python\n\nAn example scenario could be:\n* start an instance of SUSE Manager\n* use SUSE Manager to deploy two SLES servers\n* show how SUSE Manager can be used to patch those servers\n\nThe idea is that the setup should come with all batteries included, i.e. network, demo users, groups etc. are all created automatically (or part of the demo build).\n\n## Status\n\nI plan to work on this project.\n\nGitHub will be used to host the project code.\n\n\n## Related material\n\n* [Source Code](http://github.com/openSUSE/world-domination)\n\n## Comments\n\n*by Joachim Werner*\n\nGitHub project not created yet\n",
      "originator": "Joachim Werner",
      "members": [
        "Joachim Werner"
      ]
    },
    {
      "title": "Rename Pullermann",
      "categories": [
        "web",
        "ruby",
        "git"
      ],
      "tags": [
        "helpwanted",
        "inprogress"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nPullermann is a rubygem that runs your code (e.g. tests) on pull requests before they are merged and leaves a comment on GitHub telling you whether your code still runs after you merge the request.\n\nThe original name was chosen as a play on pull requests. At the same time \"Pullermann\" is also a German euphemism for penis. Especially because of the recent discussions about sexism in tech (just search for the various PyCon incidents, BritRuby, ...) and I don't want to offend anyone, the name has to change.\n\n\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\nThere is already an [issue](https://github.com/b4mboo/pullermann/issues/1#issuecomment-16042325) on the gem's GitHub page. \n\nMy current favorite is \"Prophet\". \n\nI'm still open for suggestions and will finally change the name on Thursday.\n\nIdeas:\n* Pullover\n* Mr. Tee\n* Forrest\n* Ferryman\n* Puller\n* CommitTester\n* PullRequestTester\n* TestYourPullRequest\n* TestRequest\n* Teer\n* GreenLight\n* RedLight\n* CommitGuard\n* PReT\n* BeefEater\n* TestBefore\n* Agamemnon\n* Gibraltar\n* Pusteblume\n* RequestTest\n* ReTe\n* Retter\n* PeaceOfMind\n* Cassandra\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [Source Code](http://github.com/b4mboo/pullermann)\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\nBamboo says: \"Let's do this!\"",
      "originator": "Dominik Bamberger",
      "members": [
        "Dominik Bamberger"
      ]
    },
    {
      "title": "Network Simulation (NS 3) tool on SUSE",
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\n\nNS-3 software is free software and is distributed under the GNU GPL v2 license. \n\nNS-3 separate the Network to 4 parts: 1.Node , 2.NetDevice , 3.Channel ,4.Application. The advantage of NS-3 is that we can write the script via C++ or Python.  It is a discrete-event network simulator for Internet systems, and is free software, licensed under the GNU GPLv2 license, and is publicly available for research, development, and use.\n\nNS-3 tool can be used to write some script and parameter to simulate the environment which we don't have. Such as Network ,Wireless,LTE ...etc.\n\nPS. NS2 is the previous Network Simulation build version. \n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nRecent version:\nns-3.16 was released on 21 December 2012. \nUpcoming release:\nns-3.17 is scheduled for April 24, 2013. \n\nI plan to work on this project. http://www.nsnam.org/wiki/index.php/Main_Page\n\nBuild/Install NS3 tool under openSUSE. http://www.nsnam.org/wiki/index.php/Installation\n\nThere is ONLY the installation way of Ubuntu/Debian ; Fedora/RedHat ; Gentoo on official website. I will try to make some progress on it.\n\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n\n\nSend mail to NS-3 AUTHORS about the building status under openSUSE 12.2 platform. \n\nJoin ns-3-users@googlegroups.com to join the NS-3 community.  https://groups.google.com/forum/#!forum/ns-3-users\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [Source Code]( http://www.nsnam.org/release/ns-allinone-3.16.tar.bz2)\n\nRelease source:\nhttp://www.nsnam.org/release/\n\nDocument:\nhttp://www.nsnam.org/ns-3-16/documentation/\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\n\n",
      "originator": "Ben Chou",
      "members": [

      ]
    },
    {
      "title": "read   The beauty of mathematics ",
      "categories": [
        "learning"
      ],
      "tags": [
        "idea",
        "helpwanted"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nI will read the first seven chapters of the book and some other pages about NLP ,since I am interested in this subject.\n\n\n\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nI plan to work on this project.\n\n\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n\n[NLP](http://nlp.csai.tsinghua.edu.cn/site2/index.php?option=com_content&view=article&id=48&Itemid=55&lang=en)\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "FeiXiang Zhang",
      "members": [

      ]
    },
    {
      "title": "Investigate ESX and Hyper v support in OpenStack Grizzly",
      "categories": [
        "cloud",
        "virtualization"
      ],
      "tags": [
        "idea",
        "helpwanted"
      ],
      "description": "\nThere has been considerable interest in supporting ESX and Hyper-v compute nodes in SUSE Cloud.  I would like to investigate how well the nova scheduler performs when scheduling instance requests in a heterogenous clould consisting of KVM, Xen, ESX, and Hyper-v compute nodes.\n\n\n## Status\n\nI plan to work on this project during hackweek 9.\n\n\n\n\n## Related material\n\n## Comments\n\n*by Jim Fehlig* After a bit of hackery, I finally have an ESXi compute node communicating with my OpenStack controller.  Next up is deploying an image to this node.  I have a VMware appliance building in SUSE Studio now and will upload it to glance and give it a spin - tomorrow :).",
      "originator": "Jim Fehlig",
      "members": [
        "Jim Fehlig"
      ]
    },
    {
      "title": "Ceph Appliance",
      "categories": [
        "storage",
        "cloud"
      ],
      "tags": [
        "idea",
        "helpwanted",
        "ceph",
        "openstack"
      ],
      "description": "\nWhen Florian Haas and I presented our [Ceph Tutorial](https://lca2013.linux.org.au/schedule/30091/view_talk?day=friday) at [linux.conf.au 2013](https://lca2013.linux.org.au), we used Debian VM images, mostly because Florian already had them, and they worked.  I'd like to replicate this, but as a Studio Appliance, so people can go download it, deploy it, and play with Ceph on openSUSE and/or SLES.\n\n## Status\n\nI plan to work on this project.\n\nCurrently unclear on:\n* how best to handle ease of configuration, storage/HW prerequisites, network config, etc. (or just say \"this is hard coded for _N_ nodes on this network range, live with it)\n* possible intersection with OpenStack & SUSE Cloud projects.\n\n2013-04-09 Update:\n* experimental openSUSE 12.3 + upstream Ceph 0.56 RPMs image: https://susestudio.com/a/eEqfPk/opensuse-12-3-ceph-0-56\n* blog post with notes on the above: http://ourobengr.com/2013/04/hackweek-9-ceph-appliance-odyssey/\n\n\n## Related material\n\n* VM Images\n * [Debian images from the LCA 2013 Ceph tutorial](http://mirror.linux.org.au/linux.conf.au/2013/ceph_tutorial/)\n* Ceph Documentation\n * [5-minute Quick Start](http://ceph.com/docs/master/start/quick-start/) etc.\n* Binaries\n * [RPMs from ceph.com](http://ceph.com/rpm/)\n * [filesystems/ceph on OBS](https://build.opensuse.org/package/show?package=ceph&project=filesystems)\n* Barclamps\n * https://github.com/ceph/barclamp-ceph\n * https://github.com/SUSE-Cloud/barclamp-ceph\n* Chef cookbooks\n * https://github.com/ceph/ceph-cookbooks\n* Miscellaneous\n * [Hand drawn Ceph logo](http://ourobengr.com/wp-uploads/2013/04/logo-white-fill.png) (SCNR)\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\n\n*by Tim Serong*: Obvious irritation/problem for ad-hoc appliance deployment is injecting hostname & ip address into ceph config.",
      "originator": "Tim Serong",
      "members": [

      ]
    },
    {
      "title": "dv2switch: dvswitch for two video sources on the one machine",
      "description": "Base on the video setup from : [Recording presentation](http://en.opensuse.org/openSUSE:Recording_presentation)\n  I`d like to create a small script all to use two video source on the one machine. Then We  don't need \"Mixer Laptop (with Fire-wire & Gbit)\" and can connect all in one machine.\n\nThe script should be user friendly and allow to start recording without deep knowledge of fire-ware and dvswitch.  \n\nsteps to do\n* setup a machine with at least two fire-ware connectors\nvia [Recording presentation](http://en.opensuse.org/openSUSE:Recording_presentation) and  [Dvswitch_howto](http://en.opensuse.org/Dvswitch_howto)\n* Testing how are video devices recognized in the system (dmesg, messages etc) If there is a address (like MAC in eth cards), or something else.\n* create *.conf file where users can add video devices,\n\n* the script will work in this way:\n\n* recognize video input 1\n* recognize video input 2 \n* setup path to save video stream\n* run dvswitch gui.\n* run post processing tools like Openshot or encode video\n\n",
      "originator": "mcaj",
      "members": [

      ]
    },
    {
      "title": "Allow GNOME applications to access documents on CMIS servers",
      "categories": [
        "desktop"
      ],
      "tags": [
        "idea",
        "gnome"
      ],
      "description": "\n[CMIS](http://en.wikipedia.org/wiki/CMIS) is a standard protocol to access documents stored in Document Management Systems (either proprietary or free ones). Hackweek 7 gave birth to libcmis a C++ client library for CMIS protocol now used in LibreOffice 4.0. Hackweek 8 produced a C wrapper for libcmis and obviously Hackweek 9 will be a nice occasion to use libcmis-c in GNOME to provide CMIS support to it.\n\nA nice side effect of this project is that Google Drive support is being implemented in libcmis... so GNOME applications would benefit it too.\n\nSteps towards this goal:\n* Create the gvfs backend\n* May be some UI for Nautilus\n\n\n## Status\n\nI plan to work on this project.\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [libcmis project on SF.net](https://sourceforge.net/projects/libcmis/)\n* [CMIS 1.1 specs at OASIS](http://docs.oasis-open.org/cmis/CMIS/v1.1/cs01/CMIS-v1.1-cs01.html)\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Cédric Bosdonnat",
      "members": [

      ]
    },
    {
      "title": "ARM QVM compiler",
      "categories": [
        "games",
        "hardware"
      ],
      "tags": [
        "idea"
      ],
      "description": "\nThe Quake3 virtual machine lacks a JIT for ARM. Without the JIT it's not\npossible to run mods with decent speed on ARM.\n\n## Status\n\nI plan to work on this project.\n\nSome initial code is there. Looking for takers or collaborators.\n\n<!---\n*Add also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.*\n*Popular categories: distribution,web,hardware*\n*Popular tags: idea,inprogress,done,helpwanted*\n-->\n\n\n\n## Related material\n\n* [Source Code](https://github.com/ioquake)\n\n\n## Comments\n\nby Yadan: Hi, I would like to join this project since I really like playing Q3A :), but I have no idea what JIT is so far, any documents recommended?\n<!--- \nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\n",
      "originator": "lnussel",
      "members": [

      ]
    },
    {
      "title": "De Googling my life.",
      "categories": [
        "privacy"
      ],
      "tags": [
        "idea",
        "helpwanted",
        "research"
      ],
      "description": "\nI'm finding that I rely more and more on Google's convenient services. But at what personal cost?  The 'value' of my aggregated data may be disputable, but if I want to keep it mine, what would I have to give up?  What would it cost?\n\n* Identify personally valuable services that are providing information to Google\n* Research equivalent software, preferably FOSS, to replace for such services.\n* Implement replacement applications and services.\n* Summarize what could not be equivalently replaced, if anything, and identify the material cost in time, and expense (such as hosting services) for replacements.\n\n\n## Status\n\nIdea looking for takers.\n\n<!---\n*Add also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.*\n*Popular categories: distribution,web,hardware*\n*Popular tags: idea,inprogress,done,helpwanted*\n-->\n\n\n\n## Related material\n* *by Klaas <freitag@opensuse.org>*: \nA nice read about this topic: [Moving your Contacts and Calendar away from Google](http://www.flailingmonkey.com/2013/03/26/moving-contacts-calendar-google/)\n* *vuntz*:\nI've put all my contacts and calendar in an instance of [radicale](http://radicale.org/). Pretty easy to install...\n* *by Richard aka ilmehtar <RBrownCCB@opensuse.org>*:\nFirefox seem to have a nice alternative to Google for syncing browser data (http://docs.services.mozilla.com/howtos/run-sync.html). Owncloud seems to do a good job of the Drive side of things.\n* *aspiers*: [git-annex](http://git-annex.branchable.com/assistant/) is the best distributed storage syncing solution I have seen so far.\n\n<!---\nAdd links to related material here. Example below\n* [Source Code](http://github.com/openSUSE/world-domination)\n-->\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "James Mason",
      "members": [

      ]
    },
    {
      "title": "Building an ARM thermal probe",
      "categories": [
        "hardware"
      ],
      "tags": [
        "idea"
      ],
      "description": "\nI would like to work on a thermal probe\nto monitor and graphically display temperatures (and maybe humidity) of\nour server rooms and labs.\n\nAt the moment, we use (if at all) probes that start at 200-400 EUR\nwithout sensors. I guess this should be doable much cheaper with one of\nthe available ARM boards that can be run with the openSUSE ARM port. I\nguess the costs for such a board including sensors could be less than\n100 EUR. \n\nI haven't investigated any time into this idea yet, but I guess it\nmight be worth a look.\n\n\n## Status\n\nI plan to work on this project.\n\n<!---\n*Add also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.*\n*Popular categories: distribution,web,hardware*\n*Popular tags: idea,inprogress,done,helpwanted*\n-->\n\n\n\n## Related material\n\nExample hardware setup:\n* http://www.raspberrypi.org/\n* http://learn.adafruit.com/adafruits-raspberry-pi-lesson-11-ds18b20-temperature-sensing/overview\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\n\n*by Tim Serong*: Somewhat tangentical idea: have you looked at [Arduino](http://www.arduino.cc/)? They're microcontrollers, so you wouldn't be running a real OS on 'em, but will interface to temperatures sensors, LCD screens etc. This might result in a lower hardware cost, but ultimately depends on what balance of versatility you want, I guess :-)\n\n*by Johan Kotze*: You can also look at the pcDuino - http://www.pcduino.com/ It is a more powerful ARM board that should easily be able to run openSUSE.\n\n*by James Mason*: The _[dino](https://github.com/austinbv/dino)_ ruby gem enables direct USB integration with an Arduino device; mitigation the need to do serial networking, etc. Using a [Raspberry Pi](http://www.raspberrypi.org/) & a [DigiSpark](http://digistump.com/product.php?id=1) (Arduino clone) gives you a full Linux stack, and Arduino I/O, in a form factor not much bigger than an Altoids box.  Add in a few [sensors](https://www.adafruit.com/category/35) and you could do this around $50.",
      "originator": "Lars Vogdt",
      "members": [

      ]
    },
    {
      "title": "SELinux policy for a minimal openSUSE system",
      "description": "\nLast weeks I worked on updating userspace tools and policy.<br/>\nI'd like to create a suitable policy for a minimal server system.\n\n",
      "originator": "Vitezslav Cizek",
      "members": [
        "Vitezslav Cizek",
        "Vojta Dziewiecki"
      ]
    },
    {
      "title": "System V init for openSUSE",
      "categories": [
        "distribution",
        "packaging"
      ],
      "tags": [
        "idea",
        "helpwanted"
      ],
      "description": "## Make System V init work again\n\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nCurrently the openSUSE policy is that systemd is the only on worth\nmaintaining and to have other options is wasting resources. Thus\na lot of changes breaking System V init and traditional init scripts\nhave been accepted for 12.3.\n\nThe goal of this project is to prepare a repository with alternative\nversions of packages which have been broken so that adding it as an\nadd-on will make System V init work again.\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below -->\n\nI just know about few things that have been broken and prevent switching\nto System V init and traditional init scripts. However, I'm quite sure\nthere are more and more new problems keep appearing in Factory.\n\nSo the plan is just to start with making 12.3 work and mapping what\nneeds to be done. Once reasonable part of 12.3 works, trying to keep\npace with Factory is the next step.\n\nWhoever thinks having a working System V init in openSUSE (and perhaps\nSLE12 one day) is worth a try is welcome to take part.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n<!-- ## Related material -->\n\n<!---\nAdd links to related material here. Example below\n-->\n\n<!-- ## Comments -->\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\n\n## Comments\n\n**mvyskocil**: sorry for being a nitpicker, but why do you constantly use an incorrect casing for the distribution name? All variants except openSUSE are plain wrong, especially as it was renamed from SUSE Linux. I really don't see a reason to use a different name than the official one.",
      "originator": "Michal Kubeček",
      "members": [

      ]
    },
    {
      "title": "Sticky",
      "categories": [
        "web"
      ],
      "tags": [
        "helpwanted",
        "nodejs"
      ],
      "description": "\nSticky is a little bit of experimental code I wrote during the SUSE Hack Week VIII to learn some more about node.js. It became a mixture of node.js, socket.io, Redis, HTML, CSS, and jQuery.\n\nThe app does not much more than creating sticky notes on a canvas when you click it. But you can do this collaboratively with your friends sharing the same board.\n\nIt would be great to extend this small app into something which is actually useful for brainstorming, card sorting, prioritizing ideas, or whatever else you can do with sticky notes on a canvas.\n\nSome things, which could be done during Hack Week:\n\n* Cards of different colors\n* Editing cards\n* Proper state handling when people connect and disconnect to the board\n* Move groups of cards\n* Undo\n* History\n* Export to PDF, mindmap, JSON, ...\n* ...\n\n\n## Status\n\nSome initial code is there. Looking for takers or collaborators.\n\n\n\n## Related material\n\n* [Source Code](http://github.com/cornelius/sticky)\n* [Cardboard](https://github.com/cthiel/cardboard) - a similar project implemented in Rails by [cthiel](https://github.com/cthiel/)\n\n### Screenshot\n\n![](images/sticky.png)\n\n\n## Comments\n\n*by Harry Commenter:*\n\nI like this project.\n\n*by Lara Replier:*\n\nIndeed. One additional idea: It would be great, if you could put colored dots on cards, e.g. for voting.",
      "originator": "Cornelius Schumacher",
      "members": [

      ]
    },
    {
      "title": "hack on qemu kvm cpu definitions",
      "categories": [
        "virtualization"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nFor SLE11SP3 kvm, -cpu X,Y is planned to be supported. I'd like to help resolve deficiencies, inconsistencies, migration issues, document things, etc, both in v1.4 and in head developement.\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nWe've got bugs reported related to qemu/kvm cpu definition.\nStarted looking into who's working in this area upstream, and what the already identified\ndeficiencies are. I would like to fix what we can in 1.4, and help get all problems identified\nand resolved upstream.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Bruce Rogers",
      "members": [
        "Bruce Rogers"
      ]
    },
    {
      "title": "Encryption SSL support for VNC Websockets in QEMU",
      "categories": [
        "Virtualization"
      ],
      "tags": [
        "inprogress",
        "kvm",
        "qemu",
        "vnc",
        "encryption"
      ],
      "description": "\nQEMU does now support VNC over Websockets but the support for encrypted connections over SSL is still missing:\n\n* Use GnuTLS for the encryption part\n* Examine if parts of the QEMU VNC TLS implementation could be reused\n* For reference check Libvnc Websocket implementation\n* Test final encryption support with [noVNC](http://kanaka.github.io/noVNC/)\n\n\n## Status\n\nI plan to work on this project.\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [Websockets RFC](https://tools.ietf.org/html/rfc6455)\n* [GnuTLS example](http://gnutls.org/manual/html_node/Echo-server-with-X_002e509-authentication.html#Echo-server-with-X_002e509-authentication)\n* [LibVNC websockets implementation](http://libvncserver.git.sourceforge.net/git/gitweb.cgi?p=libvncserver/libvncserver;a=blob;f=libvncserver/websockets.c)\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Tim Hardeck",
      "members": [

      ]
    },
    {
      "title": "osc3: port osc to Python3",
      "categories": [
        "distribution",
        "buildservice"
      ],
      "tags": [
        "idea",
        "python"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nThe aim of a project is to\n\n* learn more about python3 (especially be bytes/string stuff)\n* learn how to maintain larger codebase compatible with python2 and python3\n* be able to call import osc.core from python3 interpreter\n* and to make (open)SUSE ready for the future\n\nand those stuff will be nice to have, but no necessary\n\n* having /usr/bin/osc using python3\n* as well as tidying up the code\n\nSupported python flavours\n\n* python 2.6 - on sle11 and the oldest release introduces all syntax changes for python3\n* python 2.7 - on all openSUSEs, has some funny incompatibilities with py2.6\n* python 3.3+ - I'd not say we need to spend a time with oldest python3 releases\n\n## Status\n\n**mon-tue:**\nThe initial 2to3 based fixing has been done. There are some troubles with test suite, so I've pinged Marcus Huwe for a help. Atm almost 50% of test suite passes under python 3.3.\n\n**wed:**\nAll tests have passed on 2.6, 2.7 and 3.3. osc-wrapper.py has been patched as well. However the M2Crypto does not have native python3 version, so python3 version is unusable for https based connections. Therefor working on python3 port of M2Crypto - just worked around all python issues, the C/API remains.\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nI do work on this project.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [Source Code of original osc](https://github.com/openSUSE/osc)\n* [osc2](https://github.com/openSUSE/osc2)\n\n\n## Comments\n\nWhat about osc2?\n\n**mvyskocil:** I don't have any plans with osc2 atm.\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\n[Theo](http://github.com/tampakrap): There is also [2to3](http://docs.python.org/2/library/2to3.html)\n\n**mvyskocil:** I know, I've used it for initial patchset.",
      "originator": "Michal Vyskocil",
      "members": [

      ]
    },
    {
      "title": "Chef zypper cookbook",
      "categories": [
        "systemsmanagement"
      ],
      "tags": [
        "idea",
        "helpwanted",
        "ruby"
      ],
      "description": "\nWe want to have a straight-forward way to add repositories securely and then manage those repositories. The only way to do this with Chef currently is manually. Which means manually executing the steps to make sure the gpg-key is correct and trusting it in each chef recipe which wants to add a repository. \n\n[yum](https://github.com/opscode-cookbooks/yum) and [apt](https://github.com/opscode-cookbooks/apt) already have chef cookbooks so those can be used for inspiration.\n\n\n## Status\n\nIdea looking for takers.\n\nI plan to work on this project.\n\nThere is some initial code that we have been using: [Source](https://github.com/SUSE-Cloud/cookbook-openstack-common/blob/331052e5c020d2aa62ec1a251eb14daf44298c49/recipes/default.rb#L73). Maybe we should think about a different approach as well, since this assumes that the gpg key has already been published to a public key server.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [yum cookbook](https://github.com/opscode-cookbooks/yum)\n* [apt cookbook](https://github.com/opscode-cookbooks/apt)\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Ionuț Arțăriși",
      "members": [

      ]
    },
    {
      "title": "BIOS NumLock sync",
      "categories": [
        "distribution"
      ],
      "tags": [
        "boot"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nopenSUSE has a feature that allows to get NumLock status from BIOS. It is now done by parsing of hwinfo output. It is a complex and slow task, that increases boot time by about 10%.\n\nThe goal is writing a small utility, that:\n* fetches only NumLock settings from BIOS.\n* Provides it to systemd.\n\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nI plan to work on this project.\n\nInitial code is there in the libhwinfo. It just needs to get it out from there. libhwinfo has no API to fetch just this small piece of hardware setting.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n* [Source Code](http://github.com/openSUSE/world-domination)\n-->\n\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "sbrabec",
      "members": [

      ]
    },
    {
      "title": "logstash",
      "categories": [

      ],
      "tags": [
        "idea",
        "evaluation"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nlogstash is a tool to manage events and logs. It also comes with a webinterface where you can do searching inside the logs. \n\n\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nThe idea is to evaluate logstash as a logtool for the SUSE Studio production cluster environment.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [Homepage and Source Code](http://www.logstash.net)\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Wolfgang Engel",
      "members": [
        "Wolfgang Engel"
      ]
    },
    {
      "title": "No 'dd' please, add live linux to my existing stick data",
      "categories": [
        "distribution"
      ],
      "tags": [
        "kiwi"
      ],
      "description": "\nOur live CDs are great they support hybrid modes, can work as iso and disk but it's required to dump or burn them over to the media (CD/DVD/Stick) this means all the data there will be lost. I think it would be nice to not destroy what's on the stick but just add linux as data and allow to boot it. Involved techniques I thought about are:\n\n- openSUSE 12.3\n- overlayfs\n- grub2 loop support\n- imaging (kiwi)\n\n## Status\n\nI plan to work on this project\nnew stuff, tools are there\n\n\n## Related material\n\n## Comments\n\nget something done and put it into a git\nhttps://github.com/openSUSE/kiwi-deployment-tools",
      "originator": "Marcus Schäfer",
      "members": [
        "Marcus Schäfer"
      ]
    },
    {
      "title": "Improved Factory devel project submission workflow",
      "categories": [
        "distribution",
        "buildservice"
      ],
      "tags": [
        "idea",
        "obs",
        "ruby"
      ],
      "description": "\nIf factory devel projects submit larger updates, they create easily 100 or 200 submit requests that\nonly make sense to be integrated into factory at once.\n\nThe problem is that 200 submit requests are 200 legal reviews (some automatic, some manual), 200 source reviews (all manual), 200 install checks (automatic). But only once these 600 reviews are through, it makes sense to integrate them into factory.\n\nThis currently means the release manager (coolo :) needs to know the state of the reviews of all the packages before he can continue. This is goes wrong more often than it works.\n\n## Status\n\nI talked to Mls and Adrian about it so far and my idea is to support a grouping\nrequest type which acts as hidden review step for all requests presented in the group.\n\nExample: devel project K submits package a and b and they only make sense together.\nWith only two packages, you can use the multi action support of OBS requests, which means the reviewers always have to review two packages at once. This works for manual reviews with 2 packages, but the automatic tools do not support this at all (which we could fix).\n\nIf a and b get 198 sisters, it gets *really* problematic for all involved parties with multi actions. Especially as solving one problem means updating one package, means creating a new request - throwing away all reviews (who are bound to the request id in the database).\n\nWith a grouping request (the name is not yet decided :), you would do 200 submit requests, that have 3x200 reviews as now - and one additional request who wouldn't be become new unless the 600 reviews are accepted. And if you need to update one package later on, you need to create a new SR, supersede the old SR and osc can then prompt something like \"SR 99 was part of group request 100, do you want to supersede that too?\" Y? created 102 superseding SR 98 in group request 100 with SR 99.\n\nOne additional benefit is that the repo-checker can actually work on all packages at the same time, avoiding the problem we have now that evolution SR is uninstallable unless libgweather is the same in factory as in gnome project.\n\n\n## Related material\n\n* [OBS Source Code](http://github.com/openSUSE/build-service)\n\n## Comments\n\nAdrian dislikes me disliking multi action requests, but I have to live with that. Everyone but adrian dislikes multi action requests :)\n\n## TODO list\n\n* [X] define use cases and exepcted behaviour (stay away from cucumber though:)\n* [ ] API code and test cases\n* [ ] Webui code and test cases\n* [ ] osc code (optional as long as osc api works)\n\n## Use cases\n\nTerms: \"group request\" == a request of type \"group\", \"subrequest\" == \"a request of a different type, but contained in a group\"\n\n* Define a group of 2+ existant requests as group. If one of them has an open review, the whole group is in review (including the subrequests). Group requests are not valid as subrequest.\n* Add a request to a group. If the new request is in review, the whole group is in review (including the subrequests).\n* Declining/Revoking a group request. All subrequests with no open review, become new (they are single again).\n* Accepting a group request. All subrequests are accepted in one go (this of course requires to have rights to accept all of them).\n* Accepting/Revoking a subrequest. The request is removed from the group - if the other requests are without open reviews, the group turns to new\n* Replace a subrequest. Adding and removing requests should be possible within groups, direct replacing not. So replacing should work as add a new request ID and removing an old one. All tracked as history elements.\n* Superseding a subrequest. This acts like replacing \n* Accepting a review in a subrequest will make the complete group turn to new if it's the last review and only then.\n* Declining a review or the complete subrequest will not remove the request from the group, but will leave the whole group in review till the subrequest is superseded or revoked - or the group is edited in another way.\n* Especially while superseding group requests, it needs to be perfectly valid to have subrequests as part of  2 (or more) group requests.\n\n## API code\n\nThe biggest challenge is the current state of the request code in the API - the request controller is by far the most complex code in the API (and an aweful example of spagetthi code)\n\nhttps://codeclimate.com/github/openSUSE/open-build-service/RequestController rates the overall complexity with 3514, the limit for grade F is 200!\n\nSo this needed to be unpuzzled before I can add further features and took almost two days - https://github.com/openSUSE/open-build-service/pull/236/files - 28 changed files with 1,350 additions and 1,190 deletions.\n",
      "originator": "Stephan Kulow",
      "members": [

      ]
    },
    {
      "title": "Snoek improvement",
      "categories": [
        "web"
      ],
      "tags": [
        "helpwanted",
        "idea",
        "python"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nSnoek is our cute toy for team voting accompanying us for the last 3\nhackweeks (from hackweek 6 to 8). I listed the most preferred features\nof current snoek as follows, with estimation effort appended in each\nitem.\n\n* Make activities editing as consistent as the creating page (approx 1 day)\n\n* Email automation (1.5 day)\n    - Allow manual password reset when forgetting it (1 day)\n    - Send mail to encourage user vote when an activity is about to\n      expired. (1.5 day)\n\n* General UI (1 day)\n\n    - Allow the activity deadline set to precision of minutes (0.5 day)\n    - Display the total vote number in the activity display page (0.3 day)\n    - Display activity creation date/time in front page (0.2 day)\n\n* Adding privacy setting (approx 2 days)\n\n    - Allow vote sponsor hide the overall results from UI\n    - Allow creating anonymous vote\n\n* \"Who vote for what\" page improvement (2 days)\n\n    - Currently we have every votes shown as seperate tables. It would be\n      nice to have an alternative view that show all the votes in a single\n      table. \n\n    - Populate 'Who vote for what' table to odf file as well (basically\n      expand the function of \"Download Me\" button)\n\n* Use Novell LDAP authentication (approx 3 days)\n\n* Allow to create activity that allows vote among a specific range of\n  users, groups (approx 3 days)\n    - We do not support group at all, this needs to be implemented\n      before the real feature.\n\n* Rich text editor (approx 3 days)\n    - Support richer text area for activity descriptions and vote\n      questions. Allow add links to questions in activity creating\n      phase.\n    - We need to do particular research to embed a proper JQUERY rich\n      text editor, then probably do some tiny hack of the backend to\n      support text formatting storage. Finally get the results export\n      to html smoothly.\n\n* A better solution when removing question (not sure...since I didn't\n  recognize an ideal solution yet)\n  \n    - The current mechanism removed all of the votes of a question in\n      a activity when modifying a question. One possible way to\n      improve is when edit an activity's question item, we should\n      allow the activity creater choosing to remove related vote or\n      not.\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nI plan to work on this project for 1-2 days. Looking forward to\ntakers, especially the LDAP implementation :P\n\nSome initial code is there as follows. Looking for takers or collaborators.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [Source Code](http://147.2.207.136/repo/snoek.git)\n* [Django Reference](https://docs.djangoproject.com/en/1.5/)\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "yifanjiang",
      "members": [

      ]
    },
    {
      "title": "Generic Cloud Support in Open Build Service (OBS)",
      "categories": [
        "cloud",
        "obs"
      ],
      "tags": [
        "inprogress",
        "helpwanted"
      ],
      "description": "\nRunning the OBS server itself in any cloud is easy. Building inside of chroot as well, but that is insecure.\nThe goal is to use the native cloud tools to run secure builds.\n\nIn addition to that this can scale much more dynamically, since instances get started per build. So the cloud increases and decreases as needed.\n\nIn addition to that volume snapshot can be used to host preinstall images. This can speed up the package installation phase a lot.\n\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nSome initial code exists from last hackweek when openstack was used. Unfortunatly it is not mature enough due to problems with openstack at that point of time. \n\nThis time the goal is to use Amazon EC2 or Microsoft Azure to have also a public place for official Open Build Service instances for everybody.\n\nThe code shall be modular, so any kind of cloud can be supported in future as plugin.\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [Source Code] https://github.com/adrianschroeter/obs-build\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\n",
      "originator": "Adrian Schröter",
      "members": [

      ]
    },
    {
      "title": "SUSE Manager Client Manager",
      "description": "\nThis is a project that will allow management/control of clients for SUSE Manager for testing purposes\n\n* Bring up clients\n* Clone clients\n* Clean up clients after time\n* Execute tests\n* Maybe tie into HAMSTA(QA Automation/System Management)\n\n\n\n## Status\n\nStarted!",
      "originator": "mseidl",
      "members": [
        "mseidl"
      ]
    },
    {
      "title": "openSUSE & SLE support for upstream Puppet modules",
      "categories": [
        "systemsmanagement"
      ],
      "tags": [
        "idea",
        "inprogress",
        "helpwanted",
        "puppet"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nOne of the PuppetLabs guys is trying to enforce best practices on administering Puppet modules, by using base modules and build services and roles on top of them. That way we can re-use external / third-party modules from forge.puppetlabs.com, ideally without touching them at all. He names that \"the Lego approach\". [Full article](http://somethingsinistral.net/blog/configuration-management-as-legos/).\n\nThe goal of this Hack Week project is to gather a few third-party modules, and test them for SLE and openSUSE. That way we can have a number of base modules, that are ready for constructing services and roles on top of them. Most of the good modules are written by PuppetLabs or their operations team. The problem is that most of the modules on forge have minimal to no openSUSE support, due to the fact that PuppetLabs operations are using Debian in their boxes. The good part though is that PuppetLabs is very cooperative in accepting patches, so ideally we will need to work on those modules and submit our patches upstream.\n\nList of Puppet modules for hacking:\n\n* [https://github.com/puppetlabs-operations/puppet-puppet](https://github.com/puppetlabs-operations/puppet-puppet): Module to deploy and manage the Puppet Master and the Puppet Agents. It should (in theory) support various installation scenarios for the master: standalone service, apache+passenger, nginx+unicorn.\n* https://github.com/puppetlabs-operations/puppet-puppet\n* https://github.com/puppetlabs-operations/puppet-unicorn\n* https://github.com/puppetlabs-operations/puppet-nginx\n* (More to be added)\n\n\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nI plan to work on this project.\n\nSome initial code is [here](https://github.com/tampakrap/puppet-test).\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [Script](https://github.com/tampakrap/bin/blob/master/puppetmaster_deploy) to deploy Puppet Master\n* [Script](https://github.com/tampakrap/bin/blob/master/puppet_agent_deploy) to deploy Puppet Agent\n* There are already two SLE11SP2 and two openSUSE 12.3 VMs set up, along with a Debian VM to check the behavior of the upstream modules.\n* [zypprepo](https://github.com/deadpoint/puppet-zypprepo) Puppet module\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Theo Chatzimichos",
      "members": [

      ]
    },
    {
      "title": "Kill YCP by Mechanical Translation",
      "categories": [
        "yast"
      ],
      "tags": [
        "yast",
        "ycp",
        "ruby",
        "transpiler",
        "inprogress",
        "helpwanted"
      ],
      "description": "\nOur famous [YaST](http://en.opensuse.org/Portal:YaST) configuration tool is written in [YCP](http://doc.opensuse.org/projects/YaST/SLES10/tdg/Book-YCPLanguage.html), which is a proprietary programming language. It is a big source of pain for YaST developers and many would like to get rid of it. To achieve this, we started a project to automatically translate the whole YaST codebase into Ruby using a [transpiler](http://en.wikipedia.org/wiki/Source-to-source_compiler) back in January.\n\nAt this point we are able to completely translate one YaST module ([sysconfig](https://github.com/yast/yast-sysconfig)). We'd like to use Hack Week to build upon that. More specifically, we'd like to:\n\n  * Compile more YaST modules successfully\n  * Improve quality of generated Ruby code\n\n## Status\n\nWe have a promising work-in-progress implementation, but there is still lot of work ahead. Looking for collaborators.\n\n\n\n## Related material\n\n* [YCP Killer](https://github.com/yast/ycp-killer) — tool that manages translation of YCP code in YaST into Ruby, entry point to the whole project\n* [Y2R](https://github.com/yast/y2r) — transpiler translating YCP code into Ruby, used by YCP Killer\n* [YaST Ruby Bindings](https://github.com/yast/yast-ruby-bindings) — YaST Ruby language support, used to make the translated code actually work\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\n\n*by Cornelius*\n\nIt's nice how sometimes things come back and become real after a long time ;-) (see [idea from Hack Week 1](http://hackweek.suse.com/archive/projects/ycp-to-ruby-translator.html))",
      "originator": "David Majda",
      "members": [
        "David Majda",
        "Josef Reidinger",
        "Martin Vidner",
        "Ladislav Slezák"
      ]
    },
    {
      "title": "Chumby hacking",
      "categories": [
        "hardware"
      ],
      "tags": [
        "idea",
        "flash",
        "freebie"
      ],
      "description": "\n[James](https://github.com/jamestyj) has an old [Chumby](http://www.chumby.com/) in the Nuremberg office. It's a smart Internet alarm clock that uses Flash widgets. You're free to hack on whatever you want with it, both hardware and software.\n\n\n## Status\n\nIdea looking for takers.\n\n\n\n## Related material\n\n* [Chumby website](http://www.chumby.com/)\n* [James' office (internal link)](http://floor.suse.de/floor.cgi?login=jatan#jatan)\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "James Tan",
      "members": [

      ]
    },
    {
      "title": "generate user analysis report for cloud",
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nThis idea comes from website recommendation system. Some websites give their customers recommendations according to their buying record or clicking habit. \n\nIn a cloud environment, usually user can choose which kind of VMs, small, medium or large, with corresponding price. But users may not know how much resources they actually use, maybe a medium VM user actually use little resources, a small VM is enough for him, or maybe a small VM user actually use resources with heavy load, so if we can generate user analysis report for each VM periodically and give a recommendation which kind of VM is proper for him, it will be very kind for uses. \n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nIdea looking for takers.\n\nI don't have time to work on this project this hackweek.",
      "originator": "cyliu",
      "members": [

      ]
    },
    {
      "title": "Novell Groupwise support in akonadi",
      "categories": [
        "desktop"
      ],
      "tags": [
        "inprogress",
        "kde"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nNovell Groupwise provides SOAP access. The goal of this project is to create the akonadi backend, thus integrating groupwise into Kontact and possibly other KDE apps.\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nI plan to work on this project.\n\nHopefully Dan Vrátil's akonadi backend for Google can be used/reused/altered/modified to use Groupwise. \n\nAlso Ciarran Farrel's work on termine could be very valuable as information source\n\nFor SOAP, KB SOAP library will be used for it's Qt integration.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [Groupwise SOAP API] http://www.novell.com/developer/ndk/groupwise/groupwise_web_service_%28soap%29.html\n* [KD SOAP] http://www.kdab.com/kdab-products/kd-soap/\n* [Dan Vrátil's Blog] http://www.progdan.cz/category/kde/akonadi-google/\n* [Ciaran Farrell's termine] https://bitbucket.org/cfarrell1980/termine/\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\n\n*by Lukas Lipavsky*\n\nAnother interesting project: https://github.com/marionline/pyvcarddirresource \n\nIt is resource in python, so maybe it could be possible to use this approach to use Ciaran's termine directly. However I know just a little about Python, so I am not sure whether it would be viable for me. \n\nAlso I am a bit unsure regarding the performance...\n\n*by Cornelius Schumacher*\n\nWill Stephenson had some initial code for that a while ago. You should probably ask him about it.\n\nI would love to see this implemented. Would finally unify my calendars again.\n\n*by Will Stephenson*\n\nI have the initial code here.  It is a skeleton Akonadi resource and the build system to build SOAP bindings using KDSoap.  The stumbling block is that KD Soap does not properly support inheritance in SOAP interfaces yet.  I discovered this at last year's PIM meeting, KDAB are working on it now, but the implementation is still incomplete.  David Faure, the author, is going to be here for the cross desktop hackathon from Thursday through Tuesday.  But unless he has nearly solved this problem, I think a resource using a different SOAP stack might be the most realistic way to proceed this week.  This is the current state of inheritance support in KDSoap as described by David:\n\n\"On Monday 04 March 2013 21:49:41 Will Stephenson wrote:\n> https://github.com/KDAB/KDSoap/commit/d7699cf7818fc8bb80ceadc16f928906579bb7\n> 01\n>\n> Hey, where was my CCMAIL? \n\nHehe, well, it was never truly finished....\nIn fact, it still isn't.\n\nWe discovered this afterwards:\n\nClass hierarchies work when they are the direct argument of the method being \ncalled. The serialization is a virtual function internally, so this works, see \nunittests/tech3356_wsdl/test_tech3356.cpp testQueryJob() passes a derived \nclass \"BMS__QueryJobRequestByIDType\" to a method that takes a base class, and \nthe generated XML is correct.\n\nHowever, class hierarchies do not currently work for nested types, i.e. values \nthat are stored into a containing complex type.\nWe are working on that.\n(That part is going to require shared pointers in the API, I see no other way)\n\"",
      "originator": "Lukas Lipavsky",
      "members": [

      ]
    },
    {
      "title": "Storage motion for xen",
      "description": "## Describackption\nStorage motion is an existing feature of VMware but absent in Xen, it allows you to lively change backend storge devices of a running VM without data loss. It could be very useful in some cases, for example: the original storage device is in a risky status you want to replace, or the original storage is too small you want a larger one.\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nI plan to work on this project.\n",
      "originator": "cyliu",
      "members": [

      ]
    },
    {
      "title": "A parted shell in Lua",
      "description": "   The shell in the title means the language not an interactive interface.\n  \n   Shell is doing best at the functions about file system and IO Stream direction.\n\n   When what you do is complex manipulations of string and more complicated data type\n   a dynamic languages is the better choice.\n\n   Using a function like system() to call a command is less handy then the way used in shell.\n\n   Lua has a very good feature called long string which can be used to embedded a language in itself.\n   Besides one can use handy syntax to call a command in a dynamic language, one can also use the variables\n   from the code of Lua in the code of the embedded shell. \n\n### Example 1, execute commands\n    parted_shell_eval([=[\n    cmd01 -opt11 | cmd02 -opt21 | cmd03 -opt31\n    ]=])\n\n### Example 2, use variable from Lua code\n    var = 'Hello World'  ---- code in Lua\n    parted_shell_eval([=[\n    #the embedded code\n    echo $var\n    ]=])\n\n### Q & A\n\n   Q: How dose call a function defined in Lua in the embedded shell.\n\n   A: [To be done]\n\n   Q: Can it be to define a variable or a function in the embedded shell.\n\n   A: Currently I say no. Because it is not a real complete language.\n\n   Q: what types are supported in the embedded shell.\n\n   A: only string. all data of other types in Lua should be converted to a string or strings.\n\n   Q: what functions of shell are supported in the embedded shell.\n\n   A: IO stream redirection. I think this is one of the best parts of shell.\n\n   Q: what is the return value of parted_shell_eval()\n\n   A: [To be done]\n\n   Q: the function name parted_shell_eval is too long.\n\n   A: Yes a better shorter name is needed.\n\n   More Qs to be asked\n\n   More As to be give.\n\n",
      "originator": "Lance Wang",
      "members": [
        "Lance Wang"
      ]
    },
    {
      "title": "ipxe",
      "categories": [
        "distribution",
        "web"
      ],
      "tags": [
        "idea",
        "helpwanted"
      ],
      "description": "## build and document openSUSE images for use with ipxe\n\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nipxe allows to boot machines from HTTP (and other sources).\nFor this to work for openSUSE we need to\n\n* prepare a generic ipxe iso\n* provide a redirector ipxe script under a short URL\n* provide kernel, initrd and rootfs of a small openSUSE system\n* document everything and make it available for download and improvement\n\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nI plan to work on this project.\n\nSome initial code is there. Looking for takers or collaborators.\n\nDocumented some parts on https://en.opensuse.org/SDB:IPXE_booting\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* http://ipxe.org/\n* http://w3.suse.de/~bwiedemann/openqa.ipxe\n* http://networkboot.org/\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\n\n*by Cornelius*\n\nCould this be related to [[Add-a-parallel-deployment-method-in-the-openSUSE-installer]]?",
      "originator": "bmwiedemann",
      "members": [

      ]
    },
    {
      "title": "Air Quality Index extension for gnome shell",
      "categories": [
        "gnome-shell"
      ],
      "tags": [
        "idea",
        "inprogress"
      ],
      "description": "## Air Quality Index extension for gnome shell\n\nCurrently the AQI is focused by a lot of people in China, cause it's bad air, :)\nSo I want to made a extension to let we got notification quickly from gnome-shell.\n\n## Status\n\nI plan to work on this project.\n\nI've wrote part of code, and will put in github later.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n## Related material\n\n* [Not yet](http://www.github.com/binli/gnome-shell-extension-aqi)\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Bin Li",
      "members": [

      ]
    },
    {
      "title": "Lightweight KDE based desktop",
      "categories": [
        "desktop",
        "distribution"
      ],
      "tags": [
        "kde",
        "helpwanted",
        "enterprise"
      ],
      "description": "Lightweight desktops are cool, right?  KDE 3 was great but those pesky KDE 4 hackers kept adding all these doodahs and whatchamacallums that nobody needs, yeah?  But when you use XFCE there's always some little bit that you missed from your full fat desktop, and isn't LXDE getting heavier with every release?\n\nThis is a project to exploit the modularity of KDE to build a lightweight XFCE-class desktop environment, but that can be expanded as needed with additional features back to full KDE weight.\n\nThis should be of use in both server environments needing a minimal desktop for sysadmin; for fixed function users using browser based tools, and for knowledge workers/power users that want their own cocktail of mail client/calendar/productivity tools without having the KDE middleware for this function running in parallel.\n\nThe plan is to work on 3 fronts: \n* Reduced footprint of default desktop by splitting packages and making components optional\n* Speed up startup time \n* Simplify configuration by installing a smaller set of configuration modules by default, by installing fewer plugins by default, and by providing simple config UIs for the options used by lightweight desktops.\n\n## Status\nI plan to work on this, and would welcome additional collaborators.\n\nA [Trello board](https://trello.com/board/klyde/515be014e9d9a5cf48007e01) shows plans for the project. Some initial package splitting has taken place in the [OBS project] (https://build.opensuse.org/project/show?project=home%3Awstephenson%3Aworkbench%3Aklyde), an extension of the packages in KDE:Release:410.\n\n\n## Related Material\n(Need to dump my collection of lightweight desktop bookmarks)\n\n## Comments",
      "originator": "Will Stephenson",
      "members": [

      ]
    },
    {
      "title": "Optimize libfontconfig",
      "categories": [
        "gui"
      ],
      "tags": [
        "optimization",
        "fontconfig"
      ],
      "description": "\nlibfontconfig is library that locates fonts for applications. Application asks for font of some name, size, etc and the library returns location of a font file and actually size, etc the application should use.\n\nIt can follow complex rules defined in /etc/fonts/conf.d directory.\n\nWhile information about existing fonts is cached, the structure of this cache and/or algorithms written on it are terribly ineffective. Start of every graphical application is significantly slowed down by libfontconfig.\n\nI want to optimize the font matching and get gui applications start faster.\n\n## Status\n\nInitial investigations...\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [Source Code](http://cgit.freedesktop.org/fontconfig/)\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Michal Srb",
      "members": [

      ]
    },
    {
      "title": "Robot car driving by Xbox360 controller",
      "categories": [
        "desktop"
      ],
      "tags": [
        "idea",
        "robots",
        "xbox"
      ],
      "description": "\nRobot car project:\nVideo Robot car driving by Xbox360 controller\n\n\nHere are some  steps goal:\n\n* Get the video view of car from PC.\n* You can drive it with Xbox360 controller\n\n\n## Status\n\nI plan to work on this project.\n\n\n\n## Related material\n\n* [Xbox Gamepad Userspace Driver for Linux ](https://github.com/Grumbel/xboxdrv)\n\n## Comments\n\n*by Cornelius:* More robots. Yay!",
      "originator": "Forrest Kong",
      "members": [

      ]
    },
    {
      "title": "Learning clojure by building a MMO game backend",
      "categories": [
        "web"
      ],
      "tags": [
        "idea",
        "helpwanted",
        "clojure",
        "websockets",
        "rabbitmq",
        "cassandra"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\nI plant to learn more about clojure and some other technologies like RabbitMQ, Cassandra, websockets and protocol buffers by building a MMO game backend.\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nI plan to work on this project.\n\nLooking for collaborators.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Ionuț Arțăriși",
      "members": [

      ]
    },
    {
      "title": "Better arranged graphic style for Bugzilla pages and prints",
      "categories": [
        "web"
      ],
      "tags": [
        "helpwanted",
        "css"
      ],
      "description": "Both of currently available stylesheets for Novell/SUSE Bugzilla are bad not only for screens but even more for printing: about 1,5 pages is used for bug metadata and font size for text of comments is near to unreadable. The goal of this project is to change this: allow text of comments to use 100% of page width, reasonable font size of comments, well organized bug metadata, easy to read.\n\nThe expected result is a couple of CSS files: one for print and another for screen.\n\n\n## Comments\n\n*by Ancor González Sosa*\n\nTrying to add [Bug Submission Assistant](https://wiki.documentfoundation.org/Bug_Submission_Assistant) to our Bugzilla is something that is in my TODO list and maybe can be integrated into this project, since I think that both things points to the same goal (a more usable Bugzilla).\n\n*by Milan Vančura*\n\nThis looks interesting. Am I correct this is a wizard for Libre Office bugs creation? Did you discuss that with Libre Office people? (kendy or pmladek; both \"@suse.cz\">)",
      "originator": "MilanV",
      "members": [

      ]
    },
    {
      "title": "Add collaboration into gems status",
      "categories": [
        "ruby",
        "security"
      ],
      "tags": [
        "inprogress"
      ],
      "description": "\nThis is a great project to achieve collaboration between different teams on managing ruby gem security issues.\n\nWe, at the studio team, have been using the [gems-status](http://github.com/jordimassaguerpla/gems-status) software in order to manage possible security alerts on our ruby gem set. gems-status looks for suspicious messages in commits and mailing lists. The consequence of this is that we get false positives that need manual look up.\n\nThe goal of this project is to have a web interface that help us manage this security alerts by enabling some collaboration with different users/teams.\n\nIn order to do that, I'll use the [gems-status-web project](http://github.com/jordimassaguerpla/gems-status-web) that I have already started on my free time.\n\n\n## Status\n\nWork in progress.\n\n\n\n## Related material\n\n\n\n* [gems-status-web project](http://github.com/jordimassaguerpla/gems-status-web)\n* [gems-status](http://github.com/jordimassaguerpla/gems-status)\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Jordi Massaguer Pla",
      "members": [

      ]
    },
    {
      "title": "trello2wr \"generate a weekly work report (A&O) from a Trello board\"",
      "categories": [
        "Tools"
      ],
      "tags": [
        "web",
        "ruby",
        "inprogress"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nGenerates weekly work report (A&O) from Trello board\n\n### Create config.yml in ~/trello2wr/ see: https://github.com/vlewin/trello2wr\n### Build and install a gem\n    git clone git://github.com/vlewin/trello2wr.git\n    cd trello2wr\n    gem build trello2wr.gemspec\n    sudo gem install trello2wr-<VERSION>.gem\n    trello2wr\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nI plan to work on this project.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [Source Code](https://github.com/vlewin/trello2wr)\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Vladislav Lewin",
      "members": [

      ]
    },
    {
      "title": "enhance pacemaker gui performance",
      "description": "\ncrm_gui is slow.\nPlan to add some c-binding to speed-up the performance of crm_gui\n\n\n## Status\n\n",
      "originator": "dmzhang",
      "members": [

      ]
    },
    {
      "title": "docker.io and openSUSE",
      "categories": [
        "cloud"
      ],
      "tags": [
        "inprogress"
      ],
      "description": "The aim of this project is to:\n  1. run [docker.io](http://www.docker.io) on an openSUSE host.\n  2. create an openSUSE guest to run inside of docker.io.\n  3. figure out how to create docker.io guests using SUSE Studio.\n\nDocker is a really cool project. Unfortunately it can only run on Ubuntu hosts right now.\nMoreover there are just two types of containers out there: one based on Ubuntu, the other based on Fedora.\n\n## Status\n[Flavio Castelli](https://github.com/flavio) is hacking on it.\n\n### Day 1: achievements\n\nI've been able to build and run docker.io on an openSUSE 12.3 host machine.\nI'm also able to execute all the the [examples](http://docs.docker.io/en/latest/examples) reported on docker.io website. That means running a ubuntu-based containers :)\n\nTomorrow I'll clean up all the \"ugly\" hacks I had to do in order to get lxc work properly. The plan is to improve the lxc package and build a docker.io one on [OBS](http://build.opensuse.org).\n\n### Day 2: achievements\nPackaged `go-pty`, a build-time dependency of docker and created docker package which provides docker binary and its init script.\n\nFor some strange reason container's networking is not working as expected. This is probably due to the change of the default bridge interface from `lxcbr0` to `docker0`. The init script takes care of creating this bridge interface, but the containers keep complaining because they cannot attach to the device.\n\nPlans for tomorrow:\n  * figure out what is wrong with the networking interface used by the containers.\n  * small cleanup of docker.spec.\n  * push docker package to OBS inside of home:flavio_castelli:docker.\n  * extend docker to create its pid file to a file, required by the init script.\n\n### Day 3: achievements\n\nMorning:\n  * **[DONE]** figure out what is wrong with the networking interface used by the containers.\n  * **[DONE]** small cleanup of docker.spec.\n  * **[DONE]** push docker package to OBS inside of home:flavio_castelli:docker.\n  * **[DONE]** extend docker to create its pid file to a file, required by the init script.\n\nAfternoon:\n  * publish a demo appliance created with SUSE Studio appliance\n  * figure out how to crate a openSUSE-based container.\n\n\n## Related material\n* [the future of Linux Containers talk](http://www.youtube.com/embed/wW9CAH9nSLs)\n* docker.io's [examples](http://docs.docker.io/en/latest/examples/)\n\n## Comments\n\nHi @flavio! This is great and I know it will make several people very happy in the Docker community :) I created an issue on the Docker repo to track your progress and help you communicate with anyone else who might want to participate: https://github.com/dotcloud/docker/issues/359\n\nThanks again!\nSolomon\n<hr/>",
      "originator": "Flavio Castelli",
      "members": [

      ]
    },
    {
      "title": "System Web Security Wargame",
      "categories": [
        "security",
        "web"
      ],
      "tags": [
        "pentest",
        "exploit"
      ],
      "description": "\nOpen and closed systems are two type of security philosophies. Yes, we've been following the open side. We are going to do some practices on both old school( sys-sec) and new school( web-sec) in Hackweek VIIII.\n\nSteps:\n\n* Hacking on some Phrack papers which were written in old good hacking days.\n* System security wargame( stack buffer overflow, str vuln, etc)\n* Web security wargame( OWASP WebGoat, Hackxor, WFP, etc)\n\n\n## Status\n\nThese wargames are public for everyone. We won't expose our solution here, because we don't wanna be the spoilers;-)\n\n\n\n\n## Related material\n\n* [ Sys-sec wargames]( http://smashthestack.org/)\n* [ WebGoat]( http://hackxor.sourceforge.net/cgi-bin/index.pl)\n* [ WFP] ( https://pentesterlab.com/web_for_pentester.html)\n* [ Phrack!, Phrack@, Phrack#] ( http://www.phrack.org/)\n* [ OWASP code review manual] (https://www.owasp.org/index.php/Category:OWASP_Code_Review_Project)\n* [ OWASP testing guide]( https://www.owasp.org/index.php/OWASP_Testing_Project)\n\n\n## Comments\n\nAny suggestions are always welcomed!",
      "originator": "Shawn Chang",
      "members": [
        "Shawn Chang",
        "Bo Yang"
      ]
    },
    {
      "title": "I want ice cream for hackweek",
      "description": "\nThere should be a good supply of delicious ice-cream duing the Hackweek to lure people away from their offices, towards the kitchen area.\n\n\n## Status\n\nProject in progress\n\n## Related material\n\n*Put references to additional material here.*\n\n## Comments\n\n*by J. W.*\n\nAnd also sunshine, please. Icecream in the rain sucks.\n\n\n*by D. H.*\n\nand all the sweets we got last time...\n\n\n*by M. S.*\n\nThis feature is a bit cloudy (because of the theme of hackweek IV?).\n\nWhat flavor do you want? Is there anywhere in Nürnberg/Erlangen an ice-cream-delivery that has ice cream of pae or desktop flavor? Or only vanilla?\nAnd where should we no-hackers should tell the delivery to deliver the I-scream?\n\npuzzled\npistazienfresser\n(P.S.: Or is it raining in your office so that the feature is now obsolete?)\n\n\n*by J. W.*\n\nIt is snowing outside - one of the clouds there seems to be overly full.\n\nI am not activly participating this week, but the feature is not at all obsolete!\nPlease coordinate any deliveries with Melanie, so that all the hackers get their share :-)\n\n\n",
      "originator": "Clark Kent",
      "members": [

      ]
    },
    {
      "title": "Elasto Cloud Storage Improvements",
      "categories": [
        "storage",
        "cloud"
      ],
      "tags": [
        "idea",
        "helpwanted"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\n[Elasto](https://code.google.com/p/elasto/) is a cloud storage library and command line client utility for manipulating storage objects via REST. It was written as part of Hackweek 8.\n\nFor Hackweek 9 I'd like to work on the following improvements:\n* Implement support for Amazon S3.\n  * Azure is currently the only supported cloud storage provider.\n* Replace Curl with Serf as the underlying HTTP client library.\n  * Serf supports request pipelining, which is required for acceptable performance.\n  * Pipelining support in Curl is currently sub-optimal, only GET requests can be pipelined.\n* Add a fully-fledged test suite.\n\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nExisting project, looking for other contributors.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [Source Code](https://code.google.com/p/elasto/source/checkout)\n* [Project Readme](https://code.google.com/p/elasto/source/browse/readme.txt)\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\n#### *ddiss:* Day 1 update\n* [Serf HTTP client library conversion](http://code.google.com/p/elasto/issues/detail?id=1)\n  * Proposed [two serf_get patches](https://groups.google.com/forum/?fromgroups=#!msg/serf-dev/jWdrVVbWq2E/9N_S6dJHE9UJ) which attempt to add SSL client certificate and arbitrary request header support.\n  * Requested clarification from upstream regarding .pem certificate + private key support.\n* [Implementation of Amazon S3 support](http://code.google.com/p/elasto/issues/detail?id=2)\n  * Created S3 account, unfortunately Amazon don't offer a spending limit on trial accounts like Azure do.\n  * Started abstraction of cloud back-end from Elasto connection layer.\n  * Pushed [connection layer changes](http://code.google.com/p/elasto/source/list) upstream, along with other clean-up commits.\n  * Began writing code to generate the [S3 REST authentication HMAC](http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html).",
      "originator": "David Disseldorp",
      "members": [
        "David Disseldorp"
      ]
    },
    {
      "title": "Fixing CPK data model and adding features",
      "categories": [
        "security"
      ],
      "tags": [
        "passwords",
        "security",
        "encryption",
        "ux"
      ],
      "description": "\nFixing the data model as outlined at [DEVNOTES](https://github.com/yaccz/cpk/blob/master/DEVNOTES.rst)\n\n## Status\n\nI plan to work on this project.\n\nSome initial code is there.\n\n\n## Related material\n\n* [Source Code](https://github.com/yaccz/cpk/)\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "yaccz",
      "members": [

      ]
    },
    {
      "title": "Big Data Challenge",
      "categories": [
        "data"
      ],
      "tags": [
        "idea"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nBig Data is a hot topic these days. There is an interesting range of tools in this area. It would be interesting to explore some of these, make them work on SUSE distributions, and apply them to topics around SUSE. We have a number of sources of data, which could be used to create interesting results, e.g. from the [openSUSE Build Service](http://build.opensuse.org), or [SUSE Studio](http://susestudio.com).\n\nOne possible direction for this project could be to come up with some questions, e.g.\n\n* Does the programming language affect the stability of a package?\n* What effort does it take to do a major version upgrade of a package?\n* What season is most supportive for open source development)\n\nand use available data to analyze these and find and visualize results for it.\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nJust an idea.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* GitHub is doing a [data challenge](https://github.com/blog/1450-the-github-data-challenge-ii). This could also be an interesting starting point.\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\n\n",
      "originator": "Cornelius Schumacher",
      "members": [

      ]
    },
    {
      "title": "Cloud Security Alliance (CSA) template hacking",
      "categories": [
        "security"
      ],
      "tags": [
        "idea",
        "helpwanted"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nProbe the CSA templates to see where it makes sense to write tools to implement the templates.  This could go a long way to building use cases for a CSA-complaint security model for SUSE Manager.\n\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nI plan to work on this project.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: Cloud, Security\nPopular tags: idea\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\nhttp://www.open-scap.org/page/Main_Page <br>\nhttp://www.opendatacenteralliance.org/\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Craig Gardner",
      "members": [

      ]
    },
    {
      "title": "mfile (Ancient, dirt simple DB app gets new lease on life)",
      "categories": [
        "web"
      ],
      "tags": [
        "inprogress",
        "erlang"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nThe original *mfile* was developed by Smithfarm sometime in the 1990s to track paper and electronic files. It was written entirely in C. The user interface consisted of an ncurses form with an attached command-line parser implemented with Bison/Flex. Here's what it looked like:\n\n![The old mdebs](https://raw.github.com/smithfarm/mfile/master/misc/mfile-screen-shot-0.04.jpg)\n\nThe current project is a complete rewrite of that creaky old app. The new, improved mfile will consist of a backend written in Erlang using the Chicago Boss web framework and a jQuery frontend designed to run in Firefox. \n\n![The new mfile taking shape](https://raw.github.com/smithfarm/mfile/master/misc/mfile-screenshot-0.2.4.jpeg)\n\nThe database engine used (PostgreSQL) will not change, but of course the database encoding will be UTF-8 instead of ISO-8859-2.\n\n## Status\n\n* 2013-APR-10 managed to get app into non-working state and spent the whole afternoon recovering from my mistake; learned some more 'git' in the process\n* 2013-APR-9 hacking away ...\n* 2013-APR-8 implemented basic insert, validate and fetch functionality\n* 2013-APR-7 got pgsql adapter configured, model now uses PostgreSQL as DB backend\n* 2013-APR-6 began hacking in earnest, reimmersed myself in Erlang, ChicagoBoss\n* 2013-MAR-23 revived project, put on Github in preparation for Hackweek 9\n* 2012-AUG-27 basic skeleton in place, project enters hiatus\n* 2012-AUG-21 work on project begins\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [Source Code](http://github.com/smithfarm/mfile)\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\n\n",
      "originator": "Smithfarm",
      "members": [

      ]
    },
    {
      "title": "SUSE Manager for Android Jelly Bean refresh",
      "categories": [
        "systemsmanagement"
      ],
      "tags": [
        "helpwanted"
      ],
      "description": "\nLast year we introduced a SUSE Manager client for Android.\n\nThe application is functional, but lot of things can be improved:\n\n* Tablet layout\n* Theme\n* Jelly Bean guidelines\n\n## Status\n\nI plan to work in this project.\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [Play! page](https://play.google.com/store/apps/details?id=de.suse.android.susemanager.app)\n* [Announcement blog](https://www.suse.com/blogs/suse-manager-goes-mobile/)\n* [Android Tablet/Handset guide](http://developer.android.com/guide/practices/tablets-and-handsets.html)\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Duncan Mac-Vicar P.",
      "members": [
        "Duncan Mac-Vicar P.",
        "Johannes Renner"
      ]
    },
    {
      "title": "Try SUSE Manager",
      "description": "I am PM and rare to do the programming, so I would like to try SUSE Manager to see how to monitor and manage the linux machine.\n\n",
      "originator": "JeffreyCheung",
      "members": [

      ]
    },
    {
      "title": "Improve native lttng trace gui",
      "categories": [
        "tracing"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nImprove the native C/C++ LTTng trace viewer.  Currently the only way to graphically view LTTng trace data is to install the Eclipse IDE (solely to use it's LTTng plugin).  \n\n* Port existing resource view to latest 2.X trace format.\n* Identify performance bottlenecks and begin to resolve\n* [Long term, post hackweek, look into rewriting in GTK3 or QT,  port SuSE custom view developed for Eclipse plugin]\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nI am working on this project.    Existing project code is at:  git://git.lttng.org/lttv.git\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Tony Jones",
      "members": [

      ]
    },
    {
      "title": "Some Suse related pygame...",
      "categories": [
        "game",
        "python"
      ],
      "tags": [
        "idea",
        "inprogress"
      ],
      "description": "Developing a simple suse-related pygame...\n\n## Status\n\n\nWe plan to work on this project.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n\n\n## Comments\n",
      "originator": "Matthias Grießmeier",
      "members": [

      ]
    },
    {
      "title": "A comparison of SUSE Target Software",
      "categories": [
        "distribution"
      ],
      "tags": [
        "idea",
        "helpwanted"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nSUSE users are currently confronted with a dizzying plethora of software targets. The goal of this project is to create a comparison list of such targets, showing the capabilities of each, including:\n\n* What targets are available and their current state\n* What transports are supported by each target\n* What versions of SUSE support what versions of each target\n* Compliance: Do the targets support SCSI-3, Group Reservations, etc\n\nThis effort started with creation of a SCSI-3 Group Reservation (Python) test suite, which will ran against each target.\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nIdea looking for takers.\n\nI plan to work on this project.\n\nThere is a SCSI-3 Python-based Group Reservation test suite here: github.com/gonzoleeman/open-iscsi-pgr-validate\n\nAnd there is a SCSI test suite built into the libiscsi project here: github.com/sahlberg/libiscsi.git\n\n<!---\n*Add also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.*\n*Popular categories: distribution,web,hardware*\n*Popular tags: idea,inprogress,done,helpwanted*\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [PyUnit Test Suite](https://github.com/gonzoleeman/open-iscsi-pgr-validate)\n* [CUnit Test Suite](https://github.com/sahlberg/libiscsi.git)\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\n\nThe idea is to start creating a list of targets and manually testing and filling in data about those targets. But in the long run I'd like to automate much of the testing.\n\n*ddiss:* [istgt](https://build.opensuse.org/package/show?package=istgt&project=devel%3AopenSUSE%3AFactory) claims support for SPC-3 persistent reservations. I'm curious to see how the implementation stacks up against other targets.",
      "originator": "Lee Duncan",
      "members": [

      ]
    },
    {
      "title": "RSA private key parser in kernel",
      "categories": [
        "distribution"
      ],
      "tags": [
        "RSA",
        "crypto"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nCurrently the crypto/asymmetric_keys in kernel only supports RSA public key parsing but lack RSA private key. Due to we will need generate signature of S4 snapshot, means we need load RSA private key from EFI non-volatile variable to kernel.\n\n* Understand the logic of RSA public key parser\n* Write RSA private key parser: rsa_private_key.c\n* Write ASN.1 file for RSA private key: rsa_private_key.asn1\n* Load private key from db in UEFI OVMF BIOS for parser testing\n\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nIdea looking for takers.\n\nI plan to work on this project.\n\nDoesn't have initial code yet, reference crypto/asymmetric_keys and maybe GunPG . Looking for takers or collaborators.\n\nTODO:\n + Read PKCS #1 v2.2: RSA Cryptography Standard: http://www.rsa.com/rsalabs/node.asp?id=2125\n + Write RSA private key parser: rsa_private_key.c\n + Write ASN.1 file for RSA private key: rsa_private_key.asn1\n + Write In-software asymmetric private-key crypto subtype: private_key.c\n + Implement RSASP1 algorithm in rsa.c\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [Linux Kernel v3.9](http://github.com/openSUSE/world-domination)\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Joey Lee",
      "members": [

      ]
    },
    {
      "title": "Productivity Desktop for Unexperienced Users",
      "categories": [
        "distribution",
        "desktop"
      ],
      "tags": [
        "idea",
        "helpwanted"
      ],
      "description": "\nNowadays desktop environments are focusing very much on feature richness and beauty. While that is cool \nfor geeks this scares off people who are not used to computer usage or are simply not interested in \ndealing with computer technology for the end in itself.\n\nThe Productivity Desktop project aims to create an desktop environment which suits the needs of these kind of people. \n\nImportant markstones of the Productivity Desktop are: \n* It offers minimal but sufficient functionality. It's fun to use it. It does not scare people off.\n* It's has an up to date look and feel without distract by unneeded eyecatchy stuff.\n* It's easy to use.\n* It's not possible to break it by screwing up settings.\n* It's supports beginners (help, mouse etc) and advanced users (keybindings etc).\n\nThe productivity desktop will come with a predefined software set. It will for example not offer a \ncomplete application menu as that is not needed. Beside a few applications which are needed it will support the user to organize and find data. It will make access to internet resources easy, such as dictionaries, wikipedia, weather, maps etc. It will utilize cloud services where useful.\nConfigurations are possible, but only doable by the \"supervizor\" or administrator in pre Productivity Desktop speach.\n\nCustomizing the standard KDE deskop or utilizing the RazorQt Desktop will be a good starting point.\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nIdea looking for takers.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n\n## Related material\n\n[RazorQt](http://razor-qt.org)\n\n<!---\nAdd links to related material here. Example below\n-->\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\n\n*by Cornelius:* I like this idea. One thing I'm wondering, if \"unexperienced\" users are actually the right target. Especially people who use a desktop productively will be experienced at least in their field of work. Maybe it's just a matter of terminology. One thing, which would be great, if this could be really driven by user's needs, so basing design and implementation decisions on actual user feddback/tests/observations.",
      "originator": "Klaas",
      "members": [

      ]
    },
    {
      "title": "Add breadcrumbs in make menuconfig",
      "categories": [
        "kernel"
      ],
      "tags": [
        "idea"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nFollowing the implementation of \"jump keys\" within the Linux kernel's `make menuconfig` system during [hackweek 8](https://redmine.nue.suse.com/boards/1/topics/58) this time around I would like to add \"[breadcrumbs](http://en.wikipedia.org/wiki/Breadcrumb_%28navigation%29)\" to mconf.\n\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nI plan to work on this project.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "Benjamin Poirier",
      "members": [

      ]
    },
    {
      "title": "Anroid app for Bursa municipal bus timeline",
      "categories": [
        "android"
      ],
      "tags": [
        "idea"
      ],
      "description": "\nThis is a project to parse Bursa municipal bus timeline into json and creating an Android app to display it.\n\nWhy?\n\nBecause the current website is too heavy for mobile and sometimes very hard to read (hours are not sorted correctly)\n\n## Status\n\nParsing part is complete.\nAndroid app is able to show basic listing.\n\n\n\n## Related material\n\n* [Source Code](https://github.com/cartman/hackweek9)\n\n* [Web Site for the data (in Turkish)](http://www.burulas.com.tr/sayfa.aspx?id=393)\n## Comments",
      "originator": "İsmail Dönmez",
      "members": [

      ]
    },
    {
      "title": "Hamsta Enhancement",
      "categories": [
        "distribution"
      ],
      "tags": [
        "idea",
        "helpwanted"
      ],
      "description": "\nHamsta Enhancement:\nTry to get sensor information from physical machine , and sent it to master side.\n\n* One\nopenipmi get BMC infor? or \n\n* Two\nMulti-cast to master side\n\n* Three\n\nsimple frontend \n\n\n## Status\n\nInit plan\n\n\n\n\n## Related material\n\n* [Source Code](http://github.com/openSUSE/world-domination)\n\n\n## Comments\n",
      "originator": "Jerry Tang",
      "members": [

      ]
    },
    {
      "title": "Add a parallel deployment method in the openSUSE installer",
      "categories": [
        "distribution"
      ],
      "tags": [
        "idea",
        "helpwanted",
        "inprogress",
        "cluster",
        "deployment"
      ],
      "description": "\nThere is some nice tools to be able to clone a system using a parallel method, like ka-tools, or dolly. This project is to include this into our installer, so it will be easy to clone a system on a huge number of nodes without depending of number of nodes to duplicate. This kind of features could be used to deploy for example a diskeless system (in RAM) farm to do some Blender's rendering. This project is just a POC, duplicate a golden node system in a RAM node.\n\nHere are the steps needed to get this working:\n* package taktuk/dolly/dolly_plus (now available at https://build.opensuse.org/project/show?project=home%3Aaginies) -> done, package works\n* review linuxrc code to include this into -> in progress\n* integrate taktuk / dolly in the installer\n* quick script to setup a mini-system with ssh key\n* setup an environment platform for test (PXE, tftp, dhcp, dns etc...) -> done (use my synology)\n* documentation of the process\n\n## POC \n\nThe idea is to integrate this deployment method in the installer, boot node over the network, and send a mini-system image in the RAM of nodes to get them ready to execute a task.\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nThe project is in initial mode. There is a lot of things to devel, test, implement. This is a huge project (not realistic to be able to get this working in one week...)\n\n\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,duplication,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n\n## Related material\n\nYou need a computer as the clone node to deploy (master node), and at least another one, to be able to duplicate data on it. Of course if you have several nodes, that's really better to test this concept.\n\n\n## Comments ##\n\n*by Cornelius*\nCould this be related to [[ipxe]]?\n\n*Aginies answer*\nnot really, i just use PXE to start up my node over the network, the main idea of the project is to deploy node in parallel mode.",
      "originator": "Antoine Ginies",
      "members": [

      ]
    },
    {
      "title": "openSUSE and SLES boot from GPT under PowerVM",
      "categories": [
        "distribution"
      ],
      "tags": [
        "idea"
      ],
      "description": "\nCurrently this is not possible to boot from GPT under PowerVM. It can be done by using gpt_sync_mbr mode, so openfirmware will find PReP partition to load yaboot from. And make yaboot aware of GPT partition table so we can have root bigger than 2TB.\n\nFollowing needs to be done:\n\n* Fix [Bug 809205 - parted gpt_sync_mbr partition sizes are not consistent on Big Endian](https://bugzilla.novell.com/show_bug.cgi?id=809205)\n* Make PReP partition visible by parted output (partialy done)\n* Make yaboot read GPT partitions\n\n## Status\n\nInspired by [Bug 797485 SLES11 SP2 installation fails on GPT on PPC64](https://bugzilla.novell.com/show_bug.cgi?id=797485)\n\n\n## Reference material\n[GPT](http://en.wikipedia.org/wiki/GUID_Partition_Table)\n## Comments",
      "originator": "Dinar",
      "members": [

      ]
    },
    {
      "title": "Integrate Fedora Collections technology in openSUSE",
      "categories": [
        "distribution"
      ],
      "tags": [
        "idea",
        "helpwanted"
      ],
      "description": "\nFedora has a set of rpm macros and tools that allow to make so called\n'collections'. This allows for easier and standardized packaging in \"operating\nsystem mode\" and \"3rd party mode\". IOW eases taking packages from e.g. Factory\nand build them for an old distro without colliding with the distro package there.\n\n## Status\n\nIdea looking for takers.\n\n\n## Related material\n\n* [Fedora Documentation](http://docs.fedoraproject.org/en-US/Fedora_Contributor_Documentation/1/html/Software_Collections_Guide/index.html)\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\n",
      "originator": "Ludwig Nussel",
      "members": [

      ]
    },
    {
      "title": "Geeko Pumping Iron (ARM) Session",
      "categories": [
        "distribution"
      ],
      "tags": [
        "inprogress",
        "helpwanted"
      ],
      "description": "\nNow that openSUSE 12.3 is out, the [openSUSE ARM Team][0]﻿ want to step\nup a gear. As the cycle was shorter than normal, there are a few\nwrinkles that need to be ironed out and also a whole heap of new\nthings that can be added. After some discussion at FOSDEM, it was\ndecided to hold a Hackathon to address these items. The Hackathon will\ntake place on 08 to 12 April, both at the SUSE offices in Nuremberg as\nwell as online for those that can't attend in person.\n\nWe have a long TODO list:\n\n* AArch64 fixes for 12.3 & Factory\n* Build openSUSE 12.3 for Raspberry Pi\n* Resolve outstanding 12.3 ARM Image issues\n* Release 12.3 images\n* Create OpenStack images for ARM\n* Setup KVM capable hardware as workers for external build service\n* Build OBS Worker image for armv7l\n* Setup emulator hardware for AArch64\n* Get Xen on Chromebook & Arndale running\n* Tune OBS for more optimized ARM builds\n\nThere will also be the opportunity for new device bring up for those\nthat want to, but our intention is to work through and complete as\nmuch of the above TODO list as possible first. For those interested in\njoining in the fun, please either join us in Nuremberg and/or join the\n[opensuse-arm mailing list][1], the [#opensuse-arm IRC channel on\nFreenode][2] and also keep an eye on the [openSUSE on ARM Trello\nboard][3]. If you have any questions please let us know on the mailing\nlist or on IRC.\n\n[0]: https://en.opensuse.org/Portal:ARM\n[1]: http://lists.opensuse.org/opensuse-arm\n[2]: irc://freenode.net/#opensuse-arm\n[3]: https://trello.com/board/opensuse-on-arm/5007cfc12cf0ae352e21d8dc\n\n## Status\n\nProject in progress.\n\n\n## ARM related hack week projects\n\n* https://github.com/SUSE/hackweek/wiki/Building-an-ARM-thermal-probe\n* https://github.com/SUSE/hackweek/wiki/ARM-QVM-compiler\n\n## Related material\n\n* https://github.com/SUSE/hackweek/wiki/Building-an-ARM-thermal-probe\n* https://en.opensuse.org/Portal:ARM\n* http://lists.opensuse.org/opensuse-arm\n* irc://freenode.net/#opensuse-arm\n* https://trello.com/board/opensuse-on-arm/5007cfc12cf0ae352e21d8dc\n\n## Comments\n\n*by Cornelius Schumacher*\n\nGeeko go!\n\n*by Bamvor Jian Zhang*\n\ni was interested in \"Get Xen on Chromebook & Arndale running\". and i buy Arndale from vendor(howchip) in the early of March. But now, they said that my board will ship within two weeks, definitely after hackweek...\n\nmeanwhile, i want to try to add opensuse support for cubieboard(based on Allwinner A10 SOC). Allwinner A10 has good support on kernel 3.0, i am not sure whether i could run opensuse 12.3 on kenel 3.0, if not i need to update the kernel then learn how to use kiwi generate the image.\n\n*by Max Lin*\n\nDavid Chang and me have CuBox in our hand, since we alreay have openSUSE 12.3 CuBox JeOS image, this hackweek, we'll try to build XFCE image(kiwi) and packaging xorg-dovefb video driver(compatible with 12.3 kernel) on CuBox. Have fun!",
      "originator": "Andrew Wafaa",
      "members": [

      ]
    },
    {
      "title": "virtOnline",
      "categories": [
        "virtualization"
      ],
      "tags": [
        "jquery",
        "php"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nThis is web base project for managing VMs reomtely. The idea comes from the daily work,  we use virt-manager to manage vms. but the X windows is forwarding by ssh. sometimes, it will be die. Add I met the situation several times. due to the issue, I want to make a web based tool to manage the guest vms, It may not cover all the functions that virt-mamager does. I just want to implement the most frequent using functions, like listing\ncreating, delete VMs, and show detail state informations of the specified VM, changing configuration of VM.\n\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nWe plan to work on this project.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\n*by Jason Douglas* Instead of trying to write a web-based vm management tool, may I suggest that you spend some time investigating projects that already exist. My hackweek will be spent looking at Archipel (http://archipelproject.org/) which might fits your needs. Other options are listed here: http://www.linux-kvm.org/page/Management_Tools\n\n*by Michal Svec* I also suggest to look at SUSE Manager / SpaceWalk, it already has basic virt management capabilities; and Andreas Faerber even looked at how those could be enhanced.",
      "originator": "Hanzhibin and Haojunwei",
      "members": [

      ]
    },
    {
      "title": "Bioloid   Dynamixel hacking",
      "categories": [
        "hardware"
      ],
      "tags": [
        "robot",
        "hardware",
        "in",
        "progress"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nThis is a great project to achieve world domination in just a few steps:\n\n* Build a hexapod robot.\n* Replace closed source firmware with open source version - e.g. BioloidCControl.\n* Write software to use sensor data for simple task: collect items laying around and bring them to defined location.\n* hack around with single AX12 actuators used in the robot.\n* Robot world domination.\n\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\n* Opensource firmware exists, misses linux toolchain support, currently only a VisualStudio project). \n* Custom Hexapod needs still to be build - ETA is one day.\n* Support for Hexapod has to be added to BioloidCControl, by default its setup for humanoid robot shape.\n* Hardware is available.\n* Also an alternative firmware looks promising: BioloidControl. If time permits will play with it.\n* Looking for collaborators. \n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [BioloidCControl Source](http://code.google.com/p/bioloidccontrol/)\n* [Bioloid Hardware](http://www.robotis.com/xe/bioloid_en)\n* [BioloidControl - alternate opensource project](http://bioloidcontrol.sourceforge.net/)\n* [Dynamixel A12 actuator](http://www.crustcrawler.com/products/bioloid/docs/AX-12.pdf)\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\n\n*by Cornelius* Sounds like we really need to have a \"bring your robots to work day\" soon ;-)\n",
      "originator": "Christian Hueller",
      "members": [

      ]
    },
    {
      "title": "rapport    Work report generator for the lazy",
      "categories": [
        "distribution"
      ],
      "tags": [
        "python",
        "work",
        "report",
        "twitter",
        "launchpad",
        "bugzilla",
        "gerrit",
        "trello"
      ],
      "description": "\nWriting work reports is tedious. Some people have custom hacks. This is meant to become a real tool: https://github.com/saschpe/rapport\n\n- Collects data from various resources from the interwebs asynchronously:\n  + bugzilla, launchpad, gerrit, twitter, trello, openbuildservice\n- Simple plug-in mechanism for extendability\n- Simply ini-style config file: https://github.com/saschpe/rapport/blob/master/config/rapport.conf\n- Ever forgot to submit a work report? The following timeframes are supported (some are configurable): current_week, current_month, n_last_days, week_of_year, month_of_year\n- (Almost) comprehensive unit and functional testsuite\n- Written in Python, not VimScript, not Bash, not Ruby, not C, ..., you got it ;-)\n\n## Status\n\nProgress is coming along nicely, currently the tool (asynchronously) fetches from launchpad, gerrit, twitter and bugzilla. It is rendering text templates (for mail) but HTML support isn't far away.\n\n",
      "originator": "saschpe",
      "members": [

      ]
    },
    {
      "title": "Dashoid",
      "categories": [
        "web",
        "android"
      ],
      "tags": [
        "inprogress"
      ],
      "description": "\nDashoid is a native Android application which renders the status information of the Studio dashboard. \n\nOur Studio dashboard uses the Dashing framework developed by Shopify. Dashoid will connect to the event stream which is published by it and render the most important data.\n\n## Status\n\nSome initial code is there.\n\n\n\n## Related material\n\n* [Dashing](https://github.com/Shopify/dashing)\n\n### Screenshot\n![](images/dashoid-wip.png)\n\n<!---\n## Comments\n\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->",
      "originator": "André Duffeck",
      "members": [
        "André Duffeck"
      ]
    },
    {
      "title": "Update git review",
      "categories": [
        "web",
        "ruby",
        "git"
      ],
      "tags": [
        "helpwanted",
        "inprogress"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\ngit-review is a rubygem that helps to manage a review workflow for projects hosted on GitHub (using pull requests).\n\nOriginally, it was created during a former hackweek. Ever since then a bunch of people are using it on a daily basis. However, there are a couple of open [issues](https://github.com/b4mboo/git-review/issues?direction=desc&sort=created&state=open) that need taking care of.\n\nMeanwhile there are other gems that help with accessing GitHub from the command line (e.g. hub). Maybe we can close some of the issues with git-review by making use of those gems, such that we can concentrate on things like making git-review work with forks.\n\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\nDuring the last couple of days I finally added some tests to increase coverage and build a solid foundation to work on. I've learned my lesson and I will never again fork a repository that doesn't have sufficient tests to be able to draw confidence from them when refactoring or implementing new features. Hopefully, by going the extra mile I can encourage other people to contribute to this project.\n\n<!---\nAdd also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.\nPopular categories: distribution,web,hardware\nPopular tags: idea,inprogress,done,helpwanted\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [Source Code](http://github.com/b4mboo/git-review)\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\nBamboo says: \"I'm on it!\"",
      "originator": "Dominik Bamberger",
      "members": [
        "Dominik Bamberger"
      ]
    },
    {
      "title": "create test cases with selenium to test web application",
      "categories": [
        "web"
      ],
      "tags": [
        "idea",
        "helpwanted",
        "ruby",
        "rails"
      ],
      "description": "\n<!---\nDescription of the idea goes into this section. All text is formatted with markdown. Example below.\n-->\n\nFamiliar with some technology including:\n\n* selenium \n* ajax\n* ruby on rails\n\nCreate more than 10 test cases/suites which cover about 5 aspects of web application.\n\n## Status\n\n<!---\nDescribe status of idea or project. Examples below.\n-->\n\nI plan to work on this project.\n\n<!---\n*Add also categories and tags, if you want, so the page gets listed on the\noverview page. Categories and tags are comma-separated lists of lower-case\nwords without spaces.*\n*Popular categories: distribution,web,hardware*\n*Popular tags: idea,inprogress,done,helpwanted*\n-->\n\n\n\n## Related material\n\n<!---\nAdd links to related material here. Example below\n-->\n\n* [Source Code](http://github.com/openSUSE/world-domination)\n\n\n## Comments\n\n<!---\nAdd comments here. Start the comment with a line containing *by <your name>* so\nit's easy to see who is talking.\n-->\n\n*by Cornelius:* Have you looked at [PhantomJS](http://phantomjs.org/)? That also might be a nice way how to test web applications.",
      "originator": "JYao",
      "members": [

      ]
    }
  ],
  "people": [
    {
      "name": "Adam Spiers"
    },
    {
      "name": "Adrian Schröter"
    },
    {
      "name": "Al Cho"
    },
    {
      "name": "Alexander Bergmann"
    },
    {
      "name": "Ancor González Sosa"
    },
    {
      "name": "Andrew Wafaa"
    },
    {
      "name": "André Duffeck"
    },
    {
      "name": "Antoine Ginies"
    },
    {
      "name": "Ben Chou"
    },
    {
      "name": "Benjamin Poirier"
    },
    {
      "name": "Bin Li"
    },
    {
      "name": "Bo Yang"
    },
    {
      "name": "Bruce Rogers"
    },
    {
      "name": "Cassio Lupifieri"
    },
    {
      "name": "Christian Hueller"
    },
    {
      "name": "Christopher Hofmann"
    },
    {
      "name": "Clark Kent"
    },
    {
      "name": "Cornelius Schumacher"
    },
    {
      "name": "Craig Gardner"
    },
    {
      "name": "Cyril Hrubis"
    },
    {
      "name": "Cédric Bosdonnat"
    },
    {
      "name": "David Disseldorp"
    },
    {
      "name": "David Liang"
    },
    {
      "name": "David Mair"
    },
    {
      "name": "David Majda"
    },
    {
      "name": "David Sterba"
    },
    {
      "name": "Dinar"
    },
    {
      "name": "Dinar Valeev"
    },
    {
      "name": "Dominik Bamberger"
    },
    {
      "name": "Drew"
    },
    {
      "name": "Duncan Mac-Vicar P."
    },
    {
      "name": "FeiXiang Zhang"
    },
    {
      "name": "Flavio Castelli"
    },
    {
      "name": "Forrest Kong"
    },
    {
      "name": "Frédéric Crozat"
    },
    {
      "name": "Gary Lin"
    },
    {
      "name": "Hanzhibin and Haojunwei"
    },
    {
      "name": "Holger Hetterich"
    },
    {
      "name": "Holger Sickenberg"
    },
    {
      "name": "Ionuț Arțăriși"
    },
    {
      "name": "JYao"
    },
    {
      "name": "James Mason"
    },
    {
      "name": "James Tan"
    },
    {
      "name": "Jan Krupa"
    },
    {
      "name": "Jean Delvare"
    },
    {
      "name": "JeffreyCheung"
    },
    {
      "name": "Jerry Tang"
    },
    {
      "name": "Jim Fehlig"
    },
    {
      "name": "Joachim Werner"
    },
    {
      "name": "Joey Lee"
    },
    {
      "name": "Johannes Renner"
    },
    {
      "name": "Jordi Massaguer Pla"
    },
    {
      "name": "Josef Reidinger"
    },
    {
      "name": "Ken Wimer"
    },
    {
      "name": "Klaas"
    },
    {
      "name": "Ladislav Slezák"
    },
    {
      "name": "Lance Wang"
    },
    {
      "name": "Lars Vogdt"
    },
    {
      "name": "Lee Duncan"
    },
    {
      "name": "Ludwig Nussel"
    },
    {
      "name": "Lukas Lipavsky"
    },
    {
      "name": "Marcus Schäfer"
    },
    {
      "name": "Martin Vidner"
    },
    {
      "name": "Matt Chen"
    },
    {
      "name": "Matthias Grießmeier"
    },
    {
      "name": "Max Lin"
    },
    {
      "name": "Michael Andres"
    },
    {
      "name": "Michael Chang"
    },
    {
      "name": "Michal Hocko"
    },
    {
      "name": "Michal Kubeček"
    },
    {
      "name": "Michal Srb"
    },
    {
      "name": "Michal Vyskocil"
    },
    {
      "name": "Michal Čihař"
    },
    {
      "name": "Mike Gorse"
    },
    {
      "name": "MilanV"
    },
    {
      "name": "Mu Lei"
    },
    {
      "name": "Nanuk Krinner"
    },
    {
      "name": "Pavel Kačer"
    },
    {
      "name": "Petr Tesarik"
    },
    {
      "name": "Roman Neuhauser"
    },
    {
      "name": "Ruediger Oertel"
    },
    {
      "name": "Shawn Chang"
    },
    {
      "name": "Smithfarm"
    },
    {
      "name": "Stephan Kulow"
    },
    {
      "name": "Theo Chatzimichos"
    },
    {
      "name": "Thomas Renninger"
    },
    {
      "name": "Tim Hardeck"
    },
    {
      "name": "Tim Serong"
    },
    {
      "name": "Tomas Cech"
    },
    {
      "name": "Tony Jones"
    },
    {
      "name": "Vitezslav Cizek"
    },
    {
      "name": "Vladislav Lewin"
    },
    {
      "name": "Vojta Dziewiecki"
    },
    {
      "name": "Will Stephenson"
    },
    {
      "name": "Wolfgang Engel"
    },
    {
      "name": "Yury Tsarev"
    },
    {
      "name": "Zaoliang Luo"
    },
    {
      "name": "aplanas"
    },
    {
      "name": "bmwiedemann"
    },
    {
      "name": "cyliu"
    },
    {
      "name": "darix"
    },
    {
      "name": "dmzhang"
    },
    {
      "name": "lnussel"
    },
    {
      "name": "mcaj"
    },
    {
      "name": "mseidl"
    },
    {
      "name": "pgajdos"
    },
    {
      "name": "saschpe"
    },
    {
      "name": "sbrabec"
    },
    {
      "name": "skh"
    },
    {
      "name": "tpaszkowski"
    },
    {
      "name": "yaccz"
    },
    {
      "name": "yifanjiang"
    },
    {
      "name": "İsmail Dönmez"
    }
  ]
}
