====== Test harness for the build service for automated testing ======

/* If this is your first time using the Idea Pool, please take a second to read the  comment at the end of this template, which explains how to use tags.  

Topic tags: Community, Security, Kernel, Desktop, Virtualization, Web20, Mobile, Management, Network, UnixFeature, Server, LowPower, Performance, LAMP, Graphics, DevTool, Mono, IdeaPool
Product tags: openSUSE, SLES, SLED, SLERT, SLEPOS, SLETC
Status tags: Idea, InProgress, TryMe, InBuildService, Done, Shipped
Help tags: HelpWanted, HW-Hacker, HW-Tester, HW-Designer, HW-PM, HW-Docs, HW-Packaging

Separate tags with a space.
*/

{{tag>DevTool openSUSE Tryit TryMe BuildService Qa JudgeQa JudgeMe JudegeBest JudgeCommunity JudgeTeam Done}}

===== Description =====

Set up a system in the build service where people can run automated tests as part of the build.  Perhaps tie this to testopia.

===== People =====
/* This section is for listing all of the people involved in this idea or project:
  - The originator(s) of the idea
  - Interested people who might later help out with implementing this idea
  - Experts or knowledgeable people who could give advice about this idea

If you are already working on this project, and you need help, you can use one of the  HelpWanted tags to say so, and then write some specific details about the kinds of help that you need here. */

JP Rosevear originated this idea. 

Nagappan would like to take up this task along  with Srinidhi and Akhil as part of Hack Week !

<html>
<embed style="width:400px; height:326px;" id="VideoPlayback" type="application/x-shockwave-flash" src="http://video.google.com/googleplayer.swf?docId=-6184326840429777573&hl=en" flashvars=""> </embed>
</html>

===== Related Materials =====

Try this patch (http://people.freedesktop.org/~nagappan/obs-test-harness-new.patch) and send your feed back to anagappan AT novell DOT com, srinidhi AT novell DOT com

==== Features added as part of HackWeek ====

  * Test automation will be run in same enviroment as build environment.
  * A shell environment for the user, with which user can invoke any scripting language.

==== Advantages ====

  * User can add their testing scripts, written in any scripting language and they can invoke the scripts inside test-harness.sh.
  * Environment is recreated everytime, when the test-harness is invoked. Thus giving a reliable environment and test results.
  * Its not restricted to just test one application, you can add how many ever package you want to test, just add all of them in BuildRequires (in future TestRequires) and invoke all the tests !!!

==== Pre-Requisite to use the test environment ====
  * Need to have the test initiater code in test-harness.sh, uploaded to the current project where you want to test the application.
  * Log files should be generated in XML or HTML format / extension only.
  * Once the test is done, the result XML and / or HTML file(s) has to be moved to /tmp/RESULT directory, which will be uploaded to repository directory.

==== Known issues ====

  * Test results are uploaded to repository directory.
  * Tests are done only in RPM based environment.
  * If test-harness.sh is not available in the current project, still it goes till the invocation of test-harness.sh file.
  * All required projects for testing should be either linked or should be built in the same project.
  * Need to give all the packages required for testing in BuildRequires.
  * Tested in openSSE-10.2 and that too in chroot environment. Need to check them with other distributions and in Xen environment.

==== Future ideas ====

  * Instead of BuildRequires, It will be good, if we have TestRequires field in spec file, with which we can just install packages relate to testing and that too at the time of testing.
  * Tests should be done for DEB based environment.
  * Need to find appropriate directory and upload them.
  * Since we are giving a shell environment through test-harness.sh, we need to restrict the commands !?!
  * When test results are uploaded, it should not delete the rpm's available in repository.

==== Acknowledgment ====

Thanks to Michael Schroeder, darix and bauersman for all their valuable help and suggestion.

//**NOTE:**// Before starting this project, we don't have any idea how build system works, no perl / ruby knowledge, which are required knowledge for this project !

==== Example test-harness.sh script content ====

  ##################### Script starts here ###################
  echo "gnome-session" > ~/.xinitrc

  export DISPLAY=localhost:1
  /usr/bin/Xvfb -reset -terminate -once :1 -screen 0 1024x768x24&
  pid=`pidof Xvfb`
  sleep 5

  mkdir -p /tmp/test
  tar zxv -C /tmp/test -f gedit.tar.gz

  lwd=`pwd`
  cd /tmp/test/gedit
  ldtprunner gedit-execution.xml
  cd $lwd

  mkdir -p /tmp/RESULT
  cp -a /tmp/test/gedit/gedit-log.xml /tmp/RESULT/

  kill -s TERM `echo $pid | cut -d " " -f 1` # Kill Xvfb session at end
  ##################### Script ends here ###################

==== General Links related to testing ====

  * Linux Desktop Testing Project - http://ldtp.freedesktop.org
  * Integrate LDTP tests into jhbuild - http://bugzilla.gnome.org/show_bug.cgi?id=349114

/* Links, mockups, screen captures, files. */


/* How to Use Tags

All idea pages are tagged to make them easier to find and to indicate to the rest of the world the current state of your project.

You can apply as many topic and product tags to your idea as you want.

Status Tags
-----------
Idea: No one is working on this idea yet.
InProgress:  The project is underway.  When you apply this tag to an idea, please also edit the People section of the page to indicate who is working on the project. 
TryMe:  This project is at the point where other people can try it.  Include a link for code/packages in the page so people can find it.
InBuildService:  Idea's implementation posted in the openSUSE build service.  Provide a link.
Done:  The idea has been fully realized (though it may not yet be in a product).
Shipped:  Hooray!

Help tags:  
----------

You can apply Help tags to your project to recruit other people to help you with its implementation.  Don't apply Help tags to a project which is not already being implemented.  
Before applying any HelpWanted tags to your project, make sure that you've listed the current project contributors and leaders in the People section of this page, so that potential contributors know whom to contact.

HelpWanted:  This is a generic tag that you can apply to indicate that you want help on a project.
HW-Hacker: You need help writing code.
HW-Tester: You have something that you want help testing, or writing unit tests for.
HW-Designer: You have a great idea but can't come up with the UI? Ask for help.
HW-PM: You want help from a product manager, to get market research or talk to a partner.
HW-Docs: You want someone to help you write documentation for your project.
HW-Packaging: Your project is going well but you want someone to help you build packages out of it.
*/


/*
Topic tags: Community, Security, Kernel, Desktop, Virtualization, Web20, Mobile, Management, Network, UnixFeature, Server, LowPower, Performance, LAMP, Graphics, DevTool, Mono, IdeaPool
Product tags: openSUSE, SLES, SLED, SLERT, SLEPOS, SLETC
Help: HelpWanted, HW-Hacker, HW-Tester, HW-Designer, HW-PM, HW-Docs, HW-Packaging
Status: Idea, InProgress, TryMe, InBuildService, Done, Shipped

Separate your tags with a space (e.g "tag>Idea Server Performance").
*/

/*Happy Hacking everyone!*/
